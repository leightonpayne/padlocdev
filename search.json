[{"path":"https://leightonpayne.github.io/padlocdev/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2023 padlocdev authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://leightonpayne.github.io/padlocdev/articles/validate_the_integrity_of_padloc-db.html","id":"example-files","dir":"Articles","previous_headings":"","what":"Example files","title":"Validate the integrity of padloc-db","text":"package includes example files demonstrating functions. files can listed accessed function padlocdev_example(). following code, ’ll see function used access example files.","code":"# List example files (these are located in the package directory `padlocdev/inst/exdata/`). padlocdev_example() #>  [1] \"example_model.yaml\"   \"hmm\"                  \"hmm/PROT00001.hmm\"    #>  [4] \"hmm/PROT00002.hmm\"    \"hmm/PROT00003.hmm\"    \"hmm/PROT00004.hmm\"    #>  [7] \"hmm/PROT00005.hmm\"    \"hmm/PROT00006.hmm\"    \"hmm/PROT00007.hmm\"    #> [10] \"hmm/PROT00008.hmm\"    \"hmm/PROT00009.hmm\"    \"hmm/PROT00010.hmm\"    #> [13] \"hmm_meta.txt\"         \"protein.hmm\"          \"sys\"                  #> [16] \"sys/SystemA_I.yaml\"   \"sys/SystemA_II.yaml\"  \"sys/SystemA_III.yaml\" #> [19] \"sys/SystemB.yaml\"     \"sys/SystemC.yaml\"     \"sys/SystemD.yaml\"     #> [22] \"sys/SystemE.yaml\"     \"sys_groups.txt\"       \"sys_meta.txt\"  # Generate the full path to a specific example file. padlocdev_example(\"hmm/PROT00001.hmm\") #> /home/runner/work/_temp/Library/padlocdev/extdata/hmm/PROT00001.hmm"},{"path":"https://leightonpayne.github.io/padlocdev/articles/validate_the_integrity_of_padloc-db.html","id":"reading-padloc-db-files","dir":"Articles","previous_headings":"","what":"Reading padloc-db files","title":"Validate the integrity of padloc-db","text":"can read single profile HMMs, padloc models, HMM metadata table, system metadata table, system group information following functions.","code":""},{"path":"https://leightonpayne.github.io/padlocdev/articles/validate_the_integrity_of_padloc-db.html","id":"metadata-tables","dir":"Articles","previous_headings":"Reading padloc-db files","what":"Metadata tables","title":"Validate the integrity of padloc-db","text":"","code":"path <- padlocdev_example(\"hmm_meta.txt\") hmm_meta <- read_hmm_meta(path) head(hmm_meta) #> # A tibble: 6 × 15 #>   hmm.acc hmm.n…¹ hmm.d…² prote…³ secon…⁴ author numbe…⁵ lengt…⁶ e.val…⁷ hmm.c…⁸ #>   <chr>   <chr>   <chr>   <chr>   <chr>   <chr>    <dbl>   <dbl>   <dbl>   <dbl> #> 1 PROT00… Protei… This p… SyaA    NA      Payne…      NA      NA 0.00001     0.3 #> 2 PROT00… Protei… This p… SyaB    Sya_ac… Payne…      NA      NA 0.00001     0.3 #> 3 PROT00… Protei… This p… SyaC    Sya_ac… Payne…      NA      NA 0.00001     0.3 #> 4 PROT00… Protei… This p… SybA    NA      Payne…      NA      NA 0.00001     0.3 #> 5 PROT00… Protei… This p… SybA    NA      Payne…      NA      NA 0.00001     0.3 #> 6 PROT00… Protei… This p… SybA    NA      Payne…      NA      NA 0.00001     0.3 #> # … with 5 more variables: target.coverage.threshold <dbl>, system <chr>, #> #   literature.ref <chr>, database.ref <chr>, comments <chr>, and abbreviated #> #   variable names ¹​hmm.name, ²​hmm.description, ³​protein.name, ⁴​secondary.name, #> #   ⁵​number.seq, ⁶​length.hmm, ⁷​e.value.threshold, ⁸​hmm.coverage.threshold path <- padlocdev_example(\"sys_meta.txt\") sys_meta <- read_sys_meta(path) head(sys_meta) #> # A tibble: 6 × 5 #>   system          type     yaml.name   search notes                              #>   <chr>           <chr>    <chr>       <lgl>  <chr>                              #> 1 System Family A Type I   SystemA_I   TRUE   This is the first type of system … #> 2 System Family A Type II  SystemA_II  TRUE   This is the second type of system… #> 3 System Family A Type III SystemA_III TRUE   This is the third type of system … #> 4 System Family B NA       SystemB     TRUE   This system has an unknown mechan… #> 5 System Family C NA       SystemC     TRUE   This system has a well known mech… #> 6 System Family D NA       SystemD     TRUE   This system should probably belon… path <- padlocdev_example(\"sys_groups.txt\") sys_groups <- read_sys_groups(path) head(sys_groups) #> # A tibble: 6 × 2 #>   yaml.name   group   #>   <chr>       <chr>   #> 1 SystemA_I   group_1 #> 2 SystemA_II  group_1 #> 3 SystemA_III group_1 #> 4 SystemB     group_2 #> 5 SystemC     group_3 #> 6 SystemD     group_3"},{"path":"https://leightonpayne.github.io/padlocdev/articles/validate_the_integrity_of_padloc-db.html","id":"profile-hmms","dir":"Articles","previous_headings":"Reading padloc-db files","what":"Profile HMMs","title":"Validate the integrity of padloc-db","text":"can access profile HMM information list object. read just header information, use read_hmm_header() instead.","code":"path <- padlocdev_example(\"hmm/PROT00001.hmm\") hmm <- read_hmm(path) # profile HMMs comprise two elements, header information and model data names(hmm) #> [1] \"header\" \"model\" names(hmm[[\"header\"]]) #>  [1] \"HMMER3/f\"            \"NAME\"                \"LENG\"                #>  [4] \"ALPH\"                \"ACC\"                 \"DESC\"                #>  [7] \"MAXL\"                \"RF\"                  \"MM\"                  #> [10] \"CONS\"                \"CS\"                  \"MAP\"                 #> [13] \"DATE\"                \"COM\"                 \"NSEQ\"                #> [16] \"EFFN\"                \"CKSUM\"               \"GA\"                  #> [19] \"TC\"                  \"NC\"                  \"STATS LOCAL MSV\"     #> [22] \"STATS LOCAL VITERBI\" \"STATS LOCAL FORWARD\"  # Access a sublist of multiple elements hmm[[\"header\"]][c(\"NAME\", \"ACC\", \"DESC\")] #> $NAME #> [1] \"Protein_00001\" #>  #> $ACC #> [1] \"PROT00001\" #>  #> $DESC #> [1] \"This protein does something\"  # Access the value of a single element  hmm[[\"header\"]][[\"NAME\"]] #> [1] \"Protein_00001\" names(hmm[[\"model\"]]) #> [1] \"compo\"             \"match_emissions\"   \"insert_emissions\"  #> [4] \"state_transitions\"  hmm[[\"model\"]][[\"match_emissions\"]] #> # A tibble: 5 × 26 #>    node A      C     D     E     F     G     H     I     K     L     M     N     #>   <int> <chr>  <chr> <chr> <chr> <chr> <chr> <chr> <chr> <chr> <chr> <chr> <chr> #> 1     1 2.527… 4.55… 2.43… 2.48… 3.81… 2.97… 3.66… 3.12… 2.52… 2.84… 3.20… 2.97… #> 2     2 2.314… 4.52… 2.99… 2.31… 3.80… 3.33… 3.65… 3.17… 2.50… 2.84… 3.21… 2.98… #> 3     3 2.570… 4.41… 3.22… 2.48… 3.54… 3.47… 3.72… 2.83… 2.61… 2.31… 2.77… 3.14… #> 4     4 2.267… 4.62… 3.05… 2.35… 3.84… 3.42… 3.65… 3.22… 2.45… 2.87… 2.78… 2.76… #> 5     5 2.443… 4.97… 2.60… 2.31… 4.28… 3.05… 3.58… 3.73… 2.35… 3.27… 4.05… 2.64… #> # … with 13 more variables: P <chr>, Q <chr>, R <chr>, S <chr>, T <chr>, #> #   V <chr>, W <chr>, Y <chr>, MAP <chr>, CONS <chr>, RF <chr>, MM <chr>, #> #   CS <chr> hmm_header <- read_hmm_header(path) names(hmm) #> [1] \"header\" \"model\""},{"path":"https://leightonpayne.github.io/padlocdev/articles/validate_the_integrity_of_padloc-db.html","id":"system-models","dir":"Articles","previous_headings":"Reading padloc-db files","what":"System models","title":"Validate the integrity of padloc-db","text":", can access elements padloc model list object.","code":"path <- padlocdev_example(\"sys/SystemA_I.yaml\") model <- read_padloc_model(path) names(model) #> [1] \"maximum_separation\" \"minimum_core\"       \"minimum_total\"      #> [4] \"core_genes\"         \"optional_genes\"     \"prohibited_genes\"  model[[\"core_genes\"]] #> [1] \"SyaA\" \"SyaB\""},{"path":"https://leightonpayne.github.io/padlocdev/articles/validate_the_integrity_of_padloc-db.html","id":"reading-multiple-files","dir":"Articles","previous_headings":"Reading padloc-db files","what":"Reading multiple files","title":"Validate the integrity of padloc-db","text":"Convenience wrappers provided reading sys/*.yaml hmm/*.hmm files directory list.","code":"# Reading all profile HMMs in a directory. path <- padlocdev_example(\"hmm\") hmms <- multi_read_hmm(path) names(hmms) #>  [1] \"PROT00001\" \"PROT00002\" \"PROT00003\" \"PROT00004\" \"PROT00005\" \"PROT00006\" #>  [7] \"PROT00007\" \"PROT00008\" \"PROT00009\" \"PROT00010\" # For larger databases, it's more efficient to just read the header information # of each HMM as we're not interested in the actual model (e.g. 0.51 vs 0.33  # seconds on this small database). hmms <- multi_read_hmm_header(path) # Reading all padloc models in a directory. path <- padlocdev_example(\"sys\") models <- multi_read_padloc_model(path)"},{"path":"https://leightonpayne.github.io/padlocdev/articles/validate_the_integrity_of_padloc-db.html","id":"expanding-secondary-gene-assignments","dir":"Articles","previous_headings":"","what":"Expanding secondary gene assignments","title":"Validate the integrity of padloc-db","text":"testing model validity, secondary gene assignments need expanded. can done single gene category single system model follows. convenience wrapper provided expand gene assignments list models.","code":"hmm_meta <- padlocdev_example(\"hmm_meta.txt\") |> read_hmm_meta() model <- padlocdev_example(\"sys/SystemA_III.yaml\") |> read_padloc_model()  model[[\"optional_genes\"]] #> [1] \"Sya_accessory\"  model[[\"optional_genes\"]] <-    expand_gene_groups(model, gene_type = \"optional_genes\", hmm_meta)  model[[\"optional_genes\"]] #> [1] \"SyaB\" \"SyaC\" hmm_meta <- padlocdev_example(\"hmm_meta.txt\") |> read_hmm_meta() models <- padlocdev_example(\"sys\") |> multi_read_padloc_model()  models[[\"SystemA_III\"]][[\"optional_genes\"]] #> [1] \"Sya_accessory\"  models <- expand_gene_groups_all(models, hmm_meta)  models[[\"SystemA_III\"]][[\"optional_genes\"]] #> [1] \"SyaB\" \"SyaC\""},{"path":"https://leightonpayne.github.io/padlocdev/articles/validate_the_integrity_of_padloc-db.html","id":"checking-that-system-models-are-valid","dir":"Articles","previous_headings":"","what":"Checking that system models are valid","title":"Validate the integrity of padloc-db","text":"","code":"#asd"},{"path":"https://leightonpayne.github.io/padlocdev/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Leighton Payne. Author, maintainer.","code":""},{"path":"https://leightonpayne.github.io/padlocdev/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Payne L (2023). padlocdev: PADLOC development tools. https://github.com/leightonpayne/padlocdev, https://leightonpayne.github.io/padlocdev/.","code":"@Manual{,   title = {padlocdev: PADLOC development tools},   author = {Leighton Payne},   year = {2023},   note = {https://github.com/leightonpayne/padlocdev, https://leightonpayne.github.io/padlocdev/}, }"},{"path":[]},{"path":"https://leightonpayne.github.io/padlocdev/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"PADLOC development tools","text":"can install development version padlocdev GitHub :","code":"# install.packages(\"devtools\") devtools::install_github(\"leightonpayne/padlocdev\")"},{"path":"https://leightonpayne.github.io/padlocdev/index.html","id":"usage","dir":"","previous_headings":"","what":"Usage","title":"PADLOC development tools","text":"Refer documentation website usage information.","code":""},{"path":"https://leightonpayne.github.io/padlocdev/reference/expand_gene_groups.html","id":null,"dir":"Reference","previous_headings":"","what":"Expand gene groups — expand_gene_groups","title":"Expand gene groups — expand_gene_groups","text":"Expand secondary gene assignments specific category genes underlying genes.","code":""},{"path":"https://leightonpayne.github.io/padlocdev/reference/expand_gene_groups.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Expand gene groups — expand_gene_groups","text":"","code":"expand_gene_groups(model, gene_type, hmm_meta)"},{"path":"https://leightonpayne.github.io/padlocdev/reference/expand_gene_groups.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Expand gene groups — expand_gene_groups","text":"model padloc model. gene_type category genes expand, .e. one : \"core_genes\", \"optional_genes\", \"prohibited_genes\". hmm_meta padloc-db HMM metadata table.","code":""},{"path":"https://leightonpayne.github.io/padlocdev/reference/expand_gene_groups.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Expand gene groups — expand_gene_groups","text":"base::character() vector containing expanded gene values.","code":""},{"path":"https://leightonpayne.github.io/padlocdev/reference/expand_gene_groups.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Expand gene groups — expand_gene_groups","text":"","code":"# Read data ----------------------------------------------------------------- path <- padlocdev_example(\"sys/SystemA_III.yaml\") model <- read_padloc_model(path) model #> $maximum_separation #> [1] 3 #>  #> $minimum_core #> [1] 3 #>  #> $minimum_total #> [1] 3 #>  #> $core_genes #> [1] \"SyaA\" #>  #> $optional_genes #> [1] \"Sya_accessory\" #>  #> $prohibited_genes #> [1] \"NA\" #>  path <- padlocdev_example(\"hmm_meta.txt\") # Generate path for example model hmm_meta <- read_hmm_meta(path) hmm_meta #> # A tibble: 10 × 15 #>    hmm.acc   hmm.name     hmm.d…¹ prote…² secon…³ author numbe…⁴ lengt…⁵ e.val…⁶ #>    <chr>     <chr>        <chr>   <chr>   <chr>   <chr>    <dbl>   <dbl>   <dbl> #>  1 PROT00001 Protein_000… This p… SyaA    NA      Payne…      NA      NA 0.00001 #>  2 PROT00002 Protein_000… This p… SyaB    Sya_ac… Payne…      NA      NA 0.00001 #>  3 PROT00003 Protein_000… This p… SyaC    Sya_ac… Payne…      NA      NA 0.00001 #>  4 PROT00004 Protein_000… This p… SybA    NA      Payne…      NA      NA 0.00001 #>  5 PROT00005 Protein_000… This p… SybA    NA      Payne…      NA      NA 0.00001 #>  6 PROT00006 Protein_000… This p… SybA    NA      Payne…      NA      NA 0.00001 #>  7 PROT00007 Protein_000… This p… SycA    NA      Payne…      NA      NA 0.00001 #>  8 PROT00008 Protein_000… This p… SycB    NA      Payne…      NA      NA 0.00001 #>  9 PROT00009 Protein_000… This p… SydA    NA      Payne…      NA      NA 0.00001 #> 10 PROT00010 Protein_000… This p… SyeA    NA      Payne…      NA      NA 0.00001 #> # … with 6 more variables: hmm.coverage.threshold <dbl>, #> #   target.coverage.threshold <dbl>, system <chr>, literature.ref <chr>, #> #   database.ref <chr>, comments <chr>, and abbreviated variable names #> #   ¹​hmm.description, ²​protein.name, ³​secondary.name, ⁴​number.seq, ⁵​length.hmm, #> #   ⁶​e.value.threshold # Expand genes -------------------------------------------------------------- # The category \"optional_genes\" only contains the gene group \"Sya_accessory\" model$optional_genes #> [1] \"Sya_accessory\" # After expanding, \"Sya_accessory\" becomes \"SyaB\" and \"SyaC\" model$optional_genes <- expand_gene_groups(model, \"optional_genes\", hmm_meta) model$optional_genes #> [1] \"SyaB\" \"SyaC\""},{"path":"https://leightonpayne.github.io/padlocdev/reference/expand_gene_groups_all.html","id":null,"dir":"Reference","previous_headings":"","what":"Expand all gene groups in a list of padloc models — expand_gene_groups_all","title":"Expand all gene groups in a list of padloc models — expand_gene_groups_all","text":"Expand secondary gene assignments categories genes list padloc models underlying genes.","code":""},{"path":"https://leightonpayne.github.io/padlocdev/reference/expand_gene_groups_all.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Expand all gene groups in a list of padloc models — expand_gene_groups_all","text":"","code":"expand_gene_groups_all(models, hmm_meta)"},{"path":"https://leightonpayne.github.io/padlocdev/reference/expand_gene_groups_all.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Expand all gene groups in a list of padloc models — expand_gene_groups_all","text":"models list padloc models. hmm_meta padloc-db HMM metadata table.","code":""},{"path":"https://leightonpayne.github.io/padlocdev/reference/expand_gene_groups_all.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Expand all gene groups in a list of padloc models — expand_gene_groups_all","text":"base::list() padloc models expanded genes.","code":""},{"path":"https://leightonpayne.github.io/padlocdev/reference/expand_gene_groups_all.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Expand all gene groups in a list of padloc models — expand_gene_groups_all","text":"","code":"model <- multi_read_padloc_model(padlocdev_example(\"sys\")) hmm_meta <- read_hmm_meta(padlocdev_example(\"hmm_meta.txt\"))"},{"path":"https://leightonpayne.github.io/padlocdev/reference/hmm_files_vs_hmm_meta.html","id":null,"dir":"Reference","previous_headings":"","what":"Compare HMM files against those listed in hmm_meta.txt — hmm_files_vs_hmm_meta","title":"Compare HMM files against those listed in hmm_meta.txt — hmm_files_vs_hmm_meta","text":"Compare HMM files listed hmm_meta.txt.","code":""},{"path":"https://leightonpayne.github.io/padlocdev/reference/hmm_files_vs_hmm_meta.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compare HMM files against those listed in hmm_meta.txt — hmm_files_vs_hmm_meta","text":"","code":"hmm_files_vs_hmm_meta(hmm_list, hmm_meta)"},{"path":"https://leightonpayne.github.io/padlocdev/reference/hmm_files_vs_hmm_meta.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compare HMM files against those listed in hmm_meta.txt — hmm_files_vs_hmm_meta","text":"hmm_list base::list() HMMs (.e. read multi_read_hmm() multi_read_hmm_header()). hmm_meta padloc-db HMM metadata file (.e. read read_hmm_meta()).","code":""},{"path":"https://leightonpayne.github.io/padlocdev/reference/hmm_files_vs_hmm_meta.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compare HMM files against those listed in hmm_meta.txt — hmm_files_vs_hmm_meta","text":"base::list() two tibble::tibble(), \"HMMs without metadata\" - listing HMMs referenced HMM metadata file, \"Metadata without HMMs\" - listing HMMs referenced HMM metadata file, actually exist.","code":""},{"path":"https://leightonpayne.github.io/padlocdev/reference/multi_read_hmm.html","id":null,"dir":"Reference","previous_headings":"","what":"Read all HMMs in a directory into a list — multi_read_hmm","title":"Read all HMMs in a directory into a list — multi_read_hmm","text":"Read HMMs directory list","code":""},{"path":"https://leightonpayne.github.io/padlocdev/reference/multi_read_hmm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read all HMMs in a directory into a list — multi_read_hmm","text":"","code":"multi_read_hmm(directory)"},{"path":"https://leightonpayne.github.io/padlocdev/reference/multi_read_hmm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read all HMMs in a directory into a list — multi_read_hmm","text":"directory Path directory containing profile HMMs (*.hmm)","code":""},{"path":"https://leightonpayne.github.io/padlocdev/reference/multi_read_hmm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read all HMMs in a directory into a list — multi_read_hmm","text":"base::list() HMMs.","code":""},{"path":"https://leightonpayne.github.io/padlocdev/reference/multi_read_hmm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Read all HMMs in a directory into a list — multi_read_hmm","text":"","code":"hmms <- multi_read_hmm(padlocdev_example(\"hmm\")) hmms[1] #> $PROT00001 #> $PROT00001$header #> $PROT00001$header$`HMMER3/f` #> [1] \"[3.3 | Nov 2019]\" #>  #> $PROT00001$header$NAME #> [1] \"Protein_00001\" #>  #> $PROT00001$header$LENG #> [1] \"5\" #>  #> $PROT00001$header$ALPH #> [1] \"amino\" #>  #> $PROT00001$header$ACC #> [1] \"PROT00001\" #>  #> $PROT00001$header$DESC #> [1] \"This protein does something\" #>  #> $PROT00001$header$MAXL #> integer(0) #>  #> $PROT00001$header$RF #> [1] \"no\" #>  #> $PROT00001$header$MM #> [1] \"no\" #>  #> $PROT00001$header$CONS #> [1] \"yes\" #>  #> $PROT00001$header$CS #> [1] \"no\" #>  #> $PROT00001$header$MAP #> [1] \"yes\" #>  #> $PROT00001$header$DATE #> [1] \"Thu Jan  7 16:11:08 2021\" #>  #> $PROT00001$header$COM #> integer(0) #>  #> $PROT00001$header$NSEQ #> [1] \"10\" #>  #> $PROT00001$header$EFFN #> [1] \"0.825195\" #>  #> $PROT00001$header$CKSUM #> [1] \"653067045\" #>  #> $PROT00001$header$GA #> integer(0) #>  #> $PROT00001$header$TC #> integer(0) #>  #> $PROT00001$header$NC #> integer(0) #>  #> $PROT00001$header$`STATS LOCAL MSV` #> [1] \"-11.9551  0.69676\" #>  #> $PROT00001$header$`STATS LOCAL VITERBI` #> [1] \"-13.0895  0.69676\" #>  #> $PROT00001$header$`STATS LOCAL FORWARD` #> [1] \"-6.4760  0.69676\" #>  #>  #> $PROT00001$model #> $PROT00001$model$compo #> # A tibble: 1 × 20 #>   A      C     D     E     F     G     H     I     K     L     M     N     P     #>   <chr>  <chr> <chr> <chr> <chr> <chr> <chr> <chr> <chr> <chr> <chr> <chr> <chr> #> 1 2.412… 4.43… 2.93… 2.67… 3.54… 2.87… 3.72… 2.88… 2.72… 2.41… 3.71… 3.16… 3.35… #> # … with 7 more variables: Q <chr>, R <chr>, S <chr>, T <chr>, V <chr>, #> #   W <chr>, Y <chr> #>  #> $PROT00001$model$match_emissions #> # A tibble: 5 × 26 #>    node A      C     D     E     F     G     H     I     K     L     M     N     #>   <int> <chr>  <chr> <chr> <chr> <chr> <chr> <chr> <chr> <chr> <chr> <chr> <chr> #> 1     1 2.527… 4.55… 2.43… 2.48… 3.81… 2.97… 3.66… 3.12… 2.52… 2.84… 3.20… 2.97… #> 2     2 2.314… 4.52… 2.99… 2.31… 3.80… 3.33… 3.65… 3.17… 2.50… 2.84… 3.21… 2.98… #> 3     3 2.570… 4.41… 3.22… 2.48… 3.54… 3.47… 3.72… 2.83… 2.61… 2.31… 2.77… 3.14… #> 4     4 2.267… 4.62… 3.05… 2.35… 3.84… 3.42… 3.65… 3.22… 2.45… 2.87… 2.78… 2.76… #> 5     5 2.443… 4.97… 2.60… 2.31… 4.28… 3.05… 3.58… 3.73… 2.35… 3.27… 4.05… 2.64… #> # … with 13 more variables: P <chr>, Q <chr>, R <chr>, S <chr>, T <chr>, #> #   V <chr>, W <chr>, Y <chr>, MAP <chr>, CONS <chr>, RF <chr>, MM <chr>, #> #   CS <chr> #>  #> $PROT00001$model$insert_emissions #> # A tibble: 6 × 21 #>    node A      C     D     E     F     G     H     I     K     L     M     N     #>   <dbl> <chr>  <chr> <chr> <chr> <chr> <chr> <chr> <chr> <chr> <chr> <chr> <chr> #> 1     1 2.686… 4.42… 2.77… 2.73… 3.46… 2.40… 3.72… 3.29… 2.67… 2.69… 4.24… 2.90… #> 2     2 2.686… 4.42… 2.77… 2.73… 3.46… 2.40… 3.72… 3.29… 2.67… 2.69… 4.24… 2.90… #> 3     3 2.686… 4.42… 2.77… 2.73… 3.46… 2.40… 3.72… 3.29… 2.67… 2.69… 4.24… 2.90… #> 4     4 2.686… 4.42… 2.77… 2.73… 3.46… 2.40… 3.72… 3.29… 2.67… 2.69… 4.24… 2.90… #> 5     5 2.685… 4.42… 2.77… 2.73… 3.46… 2.40… 3.72… 3.29… 2.67… 2.69… 4.24… 2.90… #> 6     0 2.686… 4.42… 2.77… 2.73… 3.46… 2.40… 3.72… 3.29… 2.67… 2.69… 4.24… 2.90… #> # … with 8 more variables: P <chr>, Q <chr>, R <chr>, S <chr>, T <chr>, #> #   V <chr>, W <chr>, Y <chr> #>  #> $PROT00001$model$state_transitions #> # A tibble: 6 × 8 #>    node m_m     m_i     m_d     i_m     i_i     d_m     d_d     #>   <dbl> <chr>   <chr>   <chr>   <chr>   <chr>   <chr>   <chr>   #> 1     1 0.03329 3.81496 4.53730 0.61958 0.77255 0.72688 0.66051 #> 2     2 0.03329 3.81496 4.53730 0.61958 0.77255 0.72688 0.66051 #> 3     3 0.03329 3.81496 4.53730 0.61958 0.77255 0.50614 0.92337 #> 4     4 0.02823 3.97731 4.69966 0.61958 0.77255 0.59972 0.79621 #> 5     5 0.31505 1.30840 *       0.50559 0.92419 0.00000 *       #> 6     0 0.63907 1.49701 1.39263 1.67795 0.20673 0.00000 *       #>  #>  #>"},{"path":"https://leightonpayne.github.io/padlocdev/reference/multi_read_hmm_header.html","id":null,"dir":"Reference","previous_headings":"","what":"Read the headers from a profile HMM into a list. — multi_read_hmm_header","title":"Read the headers from a profile HMM into a list. — multi_read_hmm_header","text":"Read headers profile HMM list.","code":""},{"path":"https://leightonpayne.github.io/padlocdev/reference/multi_read_hmm_header.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read the headers from a profile HMM into a list. — multi_read_hmm_header","text":"","code":"multi_read_hmm_header(directory)"},{"path":"https://leightonpayne.github.io/padlocdev/reference/multi_read_hmm_header.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read the headers from a profile HMM into a list. — multi_read_hmm_header","text":"directory Path directory containing profile HMMs (*.hmm)","code":""},{"path":"https://leightonpayne.github.io/padlocdev/reference/multi_read_hmm_header.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read the headers from a profile HMM into a list. — multi_read_hmm_header","text":"base::list().","code":""},{"path":"https://leightonpayne.github.io/padlocdev/reference/multi_read_hmm_header.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Read the headers from a profile HMM into a list. — multi_read_hmm_header","text":"","code":"hmms <- multi_read_hmm_header(padlocdev_example(\"hmm\")) hmms[1] #> $PROT00001 #> $PROT00001$`HMMER3/f` #> [1] \"[3.3 | Nov 2019]\" #>  #> $PROT00001$NAME #> [1] \"Protein_00001\" #>  #> $PROT00001$LENG #> [1] \"5\" #>  #> $PROT00001$ALPH #> [1] \"amino\" #>  #> $PROT00001$ACC #> [1] \"PROT00001\" #>  #> $PROT00001$DESC #> [1] \"This protein does something\" #>  #> $PROT00001$MAXL #> integer(0) #>  #> $PROT00001$RF #> [1] \"no\" #>  #> $PROT00001$MM #> [1] \"no\" #>  #> $PROT00001$CONS #> [1] \"yes\" #>  #> $PROT00001$CS #> [1] \"no\" #>  #> $PROT00001$MAP #> [1] \"yes\" #>  #> $PROT00001$DATE #> [1] \"Thu Jan  7 16:11:08 2021\" #>  #> $PROT00001$COM #> integer(0) #>  #> $PROT00001$NSEQ #> [1] \"10\" #>  #> $PROT00001$EFFN #> [1] \"0.825195\" #>  #> $PROT00001$CKSUM #> [1] \"653067045\" #>  #> $PROT00001$GA #> integer(0) #>  #> $PROT00001$TC #> integer(0) #>  #> $PROT00001$NC #> integer(0) #>  #> $PROT00001$`STATS LOCAL MSV` #> [1] \"-11.9551  0.69676\" #>  #> $PROT00001$`STATS LOCAL VITERBI` #> [1] \"-13.0895  0.69676\" #>  #> $PROT00001$`STATS LOCAL FORWARD` #> [1] \"-6.4760  0.69676\" #>  #>"},{"path":"https://leightonpayne.github.io/padlocdev/reference/multi_read_padloc_model.html","id":null,"dir":"Reference","previous_headings":"","what":"Read the filename, NAME and ACC identifiers from a profile HMM into a list. — multi_read_padloc_model","title":"Read the filename, NAME and ACC identifiers from a profile HMM into a list. — multi_read_padloc_model","text":"Read filename, NAME ACC identifiers profile HMM list.","code":""},{"path":"https://leightonpayne.github.io/padlocdev/reference/multi_read_padloc_model.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read the filename, NAME and ACC identifiers from a profile HMM into a list. — multi_read_padloc_model","text":"","code":"multi_read_padloc_model(directory)"},{"path":"https://leightonpayne.github.io/padlocdev/reference/multi_read_padloc_model.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read the filename, NAME and ACC identifiers from a profile HMM into a list. — multi_read_padloc_model","text":"directory Path directory containing profile HMMs (*.hmm)","code":""},{"path":"https://leightonpayne.github.io/padlocdev/reference/multi_read_padloc_model.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read the filename, NAME and ACC identifiers from a profile HMM into a list. — multi_read_padloc_model","text":"base::list().","code":""},{"path":"https://leightonpayne.github.io/padlocdev/reference/multi_read_padloc_model.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Read the filename, NAME and ACC identifiers from a profile HMM into a list. — multi_read_padloc_model","text":"","code":"multi_read_hmm_header(padlocdev_example(\"hmm\")) #> $PROT00001 #> $PROT00001$`HMMER3/f` #> [1] \"[3.3 | Nov 2019]\" #>  #> $PROT00001$NAME #> [1] \"Protein_00001\" #>  #> $PROT00001$LENG #> [1] \"5\" #>  #> $PROT00001$ALPH #> [1] \"amino\" #>  #> $PROT00001$ACC #> [1] \"PROT00001\" #>  #> $PROT00001$DESC #> [1] \"This protein does something\" #>  #> $PROT00001$MAXL #> integer(0) #>  #> $PROT00001$RF #> [1] \"no\" #>  #> $PROT00001$MM #> [1] \"no\" #>  #> $PROT00001$CONS #> [1] \"yes\" #>  #> $PROT00001$CS #> [1] \"no\" #>  #> $PROT00001$MAP #> [1] \"yes\" #>  #> $PROT00001$DATE #> [1] \"Thu Jan  7 16:11:08 2021\" #>  #> $PROT00001$COM #> integer(0) #>  #> $PROT00001$NSEQ #> [1] \"10\" #>  #> $PROT00001$EFFN #> [1] \"0.825195\" #>  #> $PROT00001$CKSUM #> [1] \"653067045\" #>  #> $PROT00001$GA #> integer(0) #>  #> $PROT00001$TC #> integer(0) #>  #> $PROT00001$NC #> integer(0) #>  #> $PROT00001$`STATS LOCAL MSV` #> [1] \"-11.9551  0.69676\" #>  #> $PROT00001$`STATS LOCAL VITERBI` #> [1] \"-13.0895  0.69676\" #>  #> $PROT00001$`STATS LOCAL FORWARD` #> [1] \"-6.4760  0.69676\" #>  #>  #> $PROT00002 #> $PROT00002$`HMMER3/f` #> [1] \"[3.3 | Nov 2019]\" #>  #> $PROT00002$NAME #> [1] \"Protein_00002\" #>  #> $PROT00002$LENG #> [1] \"5\" #>  #> $PROT00002$ALPH #> [1] \"amino\" #>  #> $PROT00002$ACC #> [1] \"PROT00002\" #>  #> $PROT00002$DESC #> [1] \"This protein has this domain\" #>  #> $PROT00002$MAXL #> integer(0) #>  #> $PROT00002$RF #> [1] \"no\" #>  #> $PROT00002$MM #> [1] \"no\" #>  #> $PROT00002$CONS #> [1] \"yes\" #>  #> $PROT00002$CS #> [1] \"no\" #>  #> $PROT00002$MAP #> [1] \"yes\" #>  #> $PROT00002$DATE #> [1] \"Thu Jan  7 16:11:08 2021\" #>  #> $PROT00002$COM #> integer(0) #>  #> $PROT00002$NSEQ #> [1] \"10\" #>  #> $PROT00002$EFFN #> [1] \"0.825195\" #>  #> $PROT00002$CKSUM #> [1] \"653067045\" #>  #> $PROT00002$GA #> integer(0) #>  #> $PROT00002$TC #> integer(0) #>  #> $PROT00002$NC #> integer(0) #>  #> $PROT00002$`STATS LOCAL MSV` #> [1] \"-11.9551  0.69676\" #>  #> $PROT00002$`STATS LOCAL VITERBI` #> [1] \"-13.0895  0.69676\" #>  #> $PROT00002$`STATS LOCAL FORWARD` #> [1] \"-6.4760  0.69676\" #>  #>  #> $PROT00003 #> $PROT00003$`HMMER3/f` #> [1] \"[3.3 | Nov 2019]\" #>  #> $PROT00003$NAME #> [1] \"Protein_00003\" #>  #> $PROT00003$LENG #> [1] \"5\" #>  #> $PROT00003$ALPH #> [1] \"amino\" #>  #> $PROT00003$ACC #> [1] \"PROT00003\" #>  #> $PROT00003$DESC #> [1] \"This protein has no known domains\" #>  #> $PROT00003$MAXL #> integer(0) #>  #> $PROT00003$RF #> [1] \"no\" #>  #> $PROT00003$MM #> [1] \"no\" #>  #> $PROT00003$CONS #> [1] \"yes\" #>  #> $PROT00003$CS #> [1] \"no\" #>  #> $PROT00003$MAP #> [1] \"yes\" #>  #> $PROT00003$DATE #> [1] \"Thu Jan  7 16:11:08 2021\" #>  #> $PROT00003$COM #> integer(0) #>  #> $PROT00003$NSEQ #> [1] \"10\" #>  #> $PROT00003$EFFN #> [1] \"0.825195\" #>  #> $PROT00003$CKSUM #> [1] \"653067045\" #>  #> $PROT00003$GA #> integer(0) #>  #> $PROT00003$TC #> integer(0) #>  #> $PROT00003$NC #> integer(0) #>  #> $PROT00003$`STATS LOCAL MSV` #> [1] \"-11.9551  0.69676\" #>  #> $PROT00003$`STATS LOCAL VITERBI` #> [1] \"-13.0895  0.69676\" #>  #> $PROT00003$`STATS LOCAL FORWARD` #> [1] \"-6.4760  0.69676\" #>  #>  #> $PROT00004 #> $PROT00004$`HMMER3/f` #> [1] \"[3.3 | Nov 2019]\" #>  #> $PROT00004$NAME #> [1] \"Protein_00004\" #>  #> $PROT00004$LENG #> [1] \"5\" #>  #> $PROT00004$ALPH #> [1] \"amino\" #>  #> $PROT00004$ACC #> [1] \"PROT00004\" #>  #> $PROT00004$DESC #> [1] \"This protein does something\" #>  #> $PROT00004$MAXL #> integer(0) #>  #> $PROT00004$RF #> [1] \"no\" #>  #> $PROT00004$MM #> [1] \"no\" #>  #> $PROT00004$CONS #> [1] \"yes\" #>  #> $PROT00004$CS #> [1] \"no\" #>  #> $PROT00004$MAP #> [1] \"yes\" #>  #> $PROT00004$DATE #> [1] \"Thu Jan  7 16:11:08 2021\" #>  #> $PROT00004$COM #> integer(0) #>  #> $PROT00004$NSEQ #> [1] \"10\" #>  #> $PROT00004$EFFN #> [1] \"0.825195\" #>  #> $PROT00004$CKSUM #> [1] \"653067045\" #>  #> $PROT00004$GA #> integer(0) #>  #> $PROT00004$TC #> integer(0) #>  #> $PROT00004$NC #> integer(0) #>  #> $PROT00004$`STATS LOCAL MSV` #> [1] \"-11.9551  0.69676\" #>  #> $PROT00004$`STATS LOCAL VITERBI` #> [1] \"-13.0895  0.69676\" #>  #> $PROT00004$`STATS LOCAL FORWARD` #> [1] \"-6.4760  0.69676\" #>  #>  #> $PROT00005 #> $PROT00005$`HMMER3/f` #> [1] \"[3.3 | Nov 2019]\" #>  #> $PROT00005$NAME #> [1] \"Protein_00005\" #>  #> $PROT00005$LENG #> [1] \"5\" #>  #> $PROT00005$ALPH #> [1] \"amino\" #>  #> $PROT00005$ACC #> [1] \"PROT00005\" #>  #> $PROT00005$DESC #> [1] \"This protein has this domain\" #>  #> $PROT00005$MAXL #> integer(0) #>  #> $PROT00005$RF #> [1] \"no\" #>  #> $PROT00005$MM #> [1] \"no\" #>  #> $PROT00005$CONS #> [1] \"yes\" #>  #> $PROT00005$CS #> [1] \"no\" #>  #> $PROT00005$MAP #> [1] \"yes\" #>  #> $PROT00005$DATE #> [1] \"Thu Jan  7 16:11:08 2021\" #>  #> $PROT00005$COM #> integer(0) #>  #> $PROT00005$NSEQ #> [1] \"10\" #>  #> $PROT00005$EFFN #> [1] \"0.825195\" #>  #> $PROT00005$CKSUM #> [1] \"653067045\" #>  #> $PROT00005$GA #> integer(0) #>  #> $PROT00005$TC #> integer(0) #>  #> $PROT00005$NC #> integer(0) #>  #> $PROT00005$`STATS LOCAL MSV` #> [1] \"-11.9551  0.69676\" #>  #> $PROT00005$`STATS LOCAL VITERBI` #> [1] \"-13.0895  0.69676\" #>  #> $PROT00005$`STATS LOCAL FORWARD` #> [1] \"-6.4760  0.69676\" #>  #>  #> $PROT00006 #> $PROT00006$`HMMER3/f` #> [1] \"[3.3 | Nov 2019]\" #>  #> $PROT00006$NAME #> [1] \"Protein_00006\" #>  #> $PROT00006$LENG #> [1] \"5\" #>  #> $PROT00006$ALPH #> [1] \"amino\" #>  #> $PROT00006$ACC #> [1] \"PROT00006\" #>  #> $PROT00006$DESC #> [1] \"This protein has no known domains\" #>  #> $PROT00006$MAXL #> integer(0) #>  #> $PROT00006$RF #> [1] \"no\" #>  #> $PROT00006$MM #> [1] \"no\" #>  #> $PROT00006$CONS #> [1] \"yes\" #>  #> $PROT00006$CS #> [1] \"no\" #>  #> $PROT00006$MAP #> [1] \"yes\" #>  #> $PROT00006$DATE #> [1] \"Thu Jan  7 16:11:08 2021\" #>  #> $PROT00006$COM #> integer(0) #>  #> $PROT00006$NSEQ #> [1] \"10\" #>  #> $PROT00006$EFFN #> [1] \"0.825195\" #>  #> $PROT00006$CKSUM #> [1] \"653067045\" #>  #> $PROT00006$GA #> integer(0) #>  #> $PROT00006$TC #> integer(0) #>  #> $PROT00006$NC #> integer(0) #>  #> $PROT00006$`STATS LOCAL MSV` #> [1] \"-11.9551  0.69676\" #>  #> $PROT00006$`STATS LOCAL VITERBI` #> [1] \"-13.0895  0.69676\" #>  #> $PROT00006$`STATS LOCAL FORWARD` #> [1] \"-6.4760  0.69676\" #>  #>  #> $PROT00007 #> $PROT00007$`HMMER3/f` #> [1] \"[3.3 | Nov 2019]\" #>  #> $PROT00007$NAME #> [1] \"Protein_00007\" #>  #> $PROT00007$LENG #> [1] \"5\" #>  #> $PROT00007$ALPH #> [1] \"amino\" #>  #> $PROT00007$ACC #> [1] \"PROT00007\" #>  #> $PROT00007$DESC #> [1] \"This protein does something\" #>  #> $PROT00007$MAXL #> integer(0) #>  #> $PROT00007$RF #> [1] \"no\" #>  #> $PROT00007$MM #> [1] \"no\" #>  #> $PROT00007$CONS #> [1] \"yes\" #>  #> $PROT00007$CS #> [1] \"no\" #>  #> $PROT00007$MAP #> [1] \"yes\" #>  #> $PROT00007$DATE #> [1] \"Thu Jan  7 16:11:08 2021\" #>  #> $PROT00007$COM #> integer(0) #>  #> $PROT00007$NSEQ #> [1] \"10\" #>  #> $PROT00007$EFFN #> [1] \"0.825195\" #>  #> $PROT00007$CKSUM #> [1] \"653067045\" #>  #> $PROT00007$GA #> integer(0) #>  #> $PROT00007$TC #> integer(0) #>  #> $PROT00007$NC #> integer(0) #>  #> $PROT00007$`STATS LOCAL MSV` #> [1] \"-11.9551  0.69676\" #>  #> $PROT00007$`STATS LOCAL VITERBI` #> [1] \"-13.0895  0.69676\" #>  #> $PROT00007$`STATS LOCAL FORWARD` #> [1] \"-6.4760  0.69676\" #>  #>  #> $PROT00008 #> $PROT00008$`HMMER3/f` #> [1] \"[3.3 | Nov 2019]\" #>  #> $PROT00008$NAME #> [1] \"Protein_00008\" #>  #> $PROT00008$LENG #> [1] \"5\" #>  #> $PROT00008$ALPH #> [1] \"amino\" #>  #> $PROT00008$ACC #> [1] \"PROT00008\" #>  #> $PROT00008$DESC #> [1] \"This protein has this domain\" #>  #> $PROT00008$MAXL #> integer(0) #>  #> $PROT00008$RF #> [1] \"no\" #>  #> $PROT00008$MM #> [1] \"no\" #>  #> $PROT00008$CONS #> [1] \"yes\" #>  #> $PROT00008$CS #> [1] \"no\" #>  #> $PROT00008$MAP #> [1] \"yes\" #>  #> $PROT00008$DATE #> [1] \"Thu Jan  7 16:11:08 2021\" #>  #> $PROT00008$COM #> integer(0) #>  #> $PROT00008$NSEQ #> [1] \"10\" #>  #> $PROT00008$EFFN #> [1] \"0.825195\" #>  #> $PROT00008$CKSUM #> [1] \"653067045\" #>  #> $PROT00008$GA #> integer(0) #>  #> $PROT00008$TC #> integer(0) #>  #> $PROT00008$NC #> integer(0) #>  #> $PROT00008$`STATS LOCAL MSV` #> [1] \"-11.9551  0.69676\" #>  #> $PROT00008$`STATS LOCAL VITERBI` #> [1] \"-13.0895  0.69676\" #>  #> $PROT00008$`STATS LOCAL FORWARD` #> [1] \"-6.4760  0.69676\" #>  #>  #> $PROT00009 #> $PROT00009$`HMMER3/f` #> [1] \"[3.3 | Nov 2019]\" #>  #> $PROT00009$NAME #> [1] \"Protein_00009\" #>  #> $PROT00009$LENG #> [1] \"5\" #>  #> $PROT00009$ALPH #> [1] \"amino\" #>  #> $PROT00009$ACC #> [1] \"PROT00009\" #>  #> $PROT00009$DESC #> [1] \"This protein has no known domains\" #>  #> $PROT00009$MAXL #> integer(0) #>  #> $PROT00009$RF #> [1] \"no\" #>  #> $PROT00009$MM #> [1] \"no\" #>  #> $PROT00009$CONS #> [1] \"yes\" #>  #> $PROT00009$CS #> [1] \"no\" #>  #> $PROT00009$MAP #> [1] \"yes\" #>  #> $PROT00009$DATE #> [1] \"Thu Jan  7 16:11:08 2021\" #>  #> $PROT00009$COM #> integer(0) #>  #> $PROT00009$NSEQ #> [1] \"10\" #>  #> $PROT00009$EFFN #> [1] \"0.825195\" #>  #> $PROT00009$CKSUM #> [1] \"653067045\" #>  #> $PROT00009$GA #> integer(0) #>  #> $PROT00009$TC #> integer(0) #>  #> $PROT00009$NC #> integer(0) #>  #> $PROT00009$`STATS LOCAL MSV` #> [1] \"-11.9551  0.69676\" #>  #> $PROT00009$`STATS LOCAL VITERBI` #> [1] \"-13.0895  0.69676\" #>  #> $PROT00009$`STATS LOCAL FORWARD` #> [1] \"-6.4760  0.69676\" #>  #>  #> $PROT00010 #> $PROT00010$`HMMER3/f` #> [1] \"[3.3 | Nov 2019]\" #>  #> $PROT00010$NAME #> [1] \"Protein_00010\" #>  #> $PROT00010$LENG #> [1] \"5\" #>  #> $PROT00010$ALPH #> [1] \"amino\" #>  #> $PROT00010$ACC #> [1] \"PROT00010\" #>  #> $PROT00010$DESC #> [1] \"This protein does something\" #>  #> $PROT00010$MAXL #> integer(0) #>  #> $PROT00010$RF #> [1] \"no\" #>  #> $PROT00010$MM #> [1] \"no\" #>  #> $PROT00010$CONS #> [1] \"yes\" #>  #> $PROT00010$CS #> [1] \"no\" #>  #> $PROT00010$MAP #> [1] \"yes\" #>  #> $PROT00010$DATE #> [1] \"Thu Jan  7 16:11:08 2021\" #>  #> $PROT00010$COM #> integer(0) #>  #> $PROT00010$NSEQ #> [1] \"10\" #>  #> $PROT00010$EFFN #> [1] \"0.825195\" #>  #> $PROT00010$CKSUM #> [1] \"653067045\" #>  #> $PROT00010$GA #> integer(0) #>  #> $PROT00010$TC #> integer(0) #>  #> $PROT00010$NC #> integer(0) #>  #> $PROT00010$`STATS LOCAL MSV` #> [1] \"-11.9551  0.69676\" #>  #> $PROT00010$`STATS LOCAL VITERBI` #> [1] \"-13.0895  0.69676\" #>  #> $PROT00010$`STATS LOCAL FORWARD` #> [1] \"-6.4760  0.69676\" #>  #>"},{"path":"https://leightonpayne.github.io/padlocdev/reference/padlocdev_example.html","id":null,"dir":"Reference","previous_headings":"","what":"Get path to padlocdev example — padlocdev_example","title":"Get path to padlocdev example — padlocdev_example","text":"padlocdev comes bundled number sample files inst/extdata directory. function make easy access.","code":""},{"path":"https://leightonpayne.github.io/padlocdev/reference/padlocdev_example.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get path to padlocdev example — padlocdev_example","text":"","code":"padlocdev_example(file = NULL)"},{"path":"https://leightonpayne.github.io/padlocdev/reference/padlocdev_example.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get path to padlocdev example — padlocdev_example","text":"file Name file. NULL, example files listed.","code":""},{"path":"https://leightonpayne.github.io/padlocdev/reference/padlocdev_example.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get path to padlocdev example — padlocdev_example","text":"base::character().","code":""},{"path":"https://leightonpayne.github.io/padlocdev/reference/padlocdev_example.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get path to padlocdev example — padlocdev_example","text":"","code":"padlocdev_example() #>  [1] \"example_model.yaml\"   \"hmm\"                  \"hmm/PROT00001.hmm\"    #>  [4] \"hmm/PROT00002.hmm\"    \"hmm/PROT00003.hmm\"    \"hmm/PROT00004.hmm\"    #>  [7] \"hmm/PROT00005.hmm\"    \"hmm/PROT00006.hmm\"    \"hmm/PROT00007.hmm\"    #> [10] \"hmm/PROT00008.hmm\"    \"hmm/PROT00009.hmm\"    \"hmm/PROT00010.hmm\"    #> [13] \"hmm_meta.txt\"         \"protein.hmm\"          \"sys\"                  #> [16] \"sys/SystemA_I.yaml\"   \"sys/SystemA_II.yaml\"  \"sys/SystemA_III.yaml\" #> [19] \"sys/SystemB.yaml\"     \"sys/SystemC.yaml\"     \"sys/SystemD.yaml\"     #> [22] \"sys/SystemE.yaml\"     \"sys_groups.txt\"       \"sys_meta.txt\"         padlocdev_example(\"protein.hmm\") #> /home/runner/work/_temp/Library/padlocdev/extdata/protein.hmm"},{"path":"https://leightonpayne.github.io/padlocdev/reference/pipe.html","id":null,"dir":"Reference","previous_headings":"","what":"Pipe operator — %>%","title":"Pipe operator — %>%","text":"See magrittr::%>% details.","code":""},{"path":"https://leightonpayne.github.io/padlocdev/reference/pipe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pipe operator — %>%","text":"","code":"lhs %>% rhs"},{"path":"https://leightonpayne.github.io/padlocdev/reference/pipe.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pipe operator — %>%","text":"lhs value magrittr placeholder. rhs function call using magrittr semantics.","code":""},{"path":"https://leightonpayne.github.io/padlocdev/reference/pipe.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pipe operator — %>%","text":"result calling rhs(lhs).","code":""},{"path":"https://leightonpayne.github.io/padlocdev/reference/read_hmm.html","id":null,"dir":"Reference","previous_headings":"","what":"Read an HMMER3 formatted profile HMM — read_hmm","title":"Read an HMMER3 formatted profile HMM — read_hmm","text":"Read HMMER3 formatted profile HMM","code":""},{"path":"https://leightonpayne.github.io/padlocdev/reference/read_hmm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read an HMMER3 formatted profile HMM — read_hmm","text":"","code":"read_hmm(file)"},{"path":"https://leightonpayne.github.io/padlocdev/reference/read_hmm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read an HMMER3 formatted profile HMM — read_hmm","text":"file Path profile HMM generated HMMER3","code":""},{"path":"https://leightonpayne.github.io/padlocdev/reference/read_hmm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read an HMMER3 formatted profile HMM — read_hmm","text":"base::list().","code":""},{"path":"https://leightonpayne.github.io/padlocdev/reference/read_hmm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Read an HMMER3 formatted profile HMM — read_hmm","text":"","code":"read_hmm(padlocdev_example(\"protein.hmm\")) #> $header #> $header$`HMMER3/f` #> [1] \"[3.3 | Nov 2019]\" #>  #> $header$NAME #> [1] \"DruA1_00001\" #>  #> $header$LENG #> [1] \"675\" #>  #> $header$ALPH #> [1] \"amino\" #>  #> $header$ACC #> [1] \"PDLC00001\" #>  #> $header$DESC #> [1] \"DUF4338\" #>  #> $header$MAXL #> integer(0) #>  #> $header$RF #> [1] \"no\" #>  #> $header$MM #> [1] \"no\" #>  #> $header$CONS #> [1] \"yes\" #>  #> $header$CS #> [1] \"no\" #>  #> $header$MAP #> [1] \"yes\" #>  #> $header$DATE #> [1] \"Thu Jan  7 16:11:08 2021\" #>  #> $header$COM #> integer(0) #>  #> $header$NSEQ #> [1] \"10\" #>  #> $header$EFFN #> [1] \"0.825195\" #>  #> $header$CKSUM #> [1] \"653067045\" #>  #> $header$GA #> integer(0) #>  #> $header$TC #> integer(0) #>  #> $header$NC #> integer(0) #>  #> $header$`STATS LOCAL MSV` #> [1] \"-11.9551  0.69676\" #>  #> $header$`STATS LOCAL VITERBI` #> [1] \"-13.0895  0.69676\" #>  #> $header$`STATS LOCAL FORWARD` #> [1] \"-6.4760  0.69676\" #>  #>  #> $model #> $model$compo #> # A tibble: 1 × 20 #>   A      C     D     E     F     G     H     I     K     L     M     N     P     #>   <chr>  <chr> <chr> <chr> <chr> <chr> <chr> <chr> <chr> <chr> <chr> <chr> <chr> #> 1 2.412… 4.43… 2.93… 2.67… 3.54… 2.87… 3.72… 2.88… 2.72… 2.41… 3.71… 3.16… 3.35… #> # … with 7 more variables: Q <chr>, R <chr>, S <chr>, T <chr>, V <chr>, #> #   W <chr>, Y <chr> #>  #> $model$match_emissions #> # A tibble: 675 × 26 #>     node A     C     D     E     F     G     H     I     K     L     M     N     #>    <int> <chr> <chr> <chr> <chr> <chr> <chr> <chr> <chr> <chr> <chr> <chr> <chr> #>  1     1 2.52… 4.55… 2.43… 2.48… 3.81… 2.97… 3.66… 3.12… 2.52… 2.84… 3.20… 2.97… #>  2     2 2.31… 4.52… 2.99… 2.31… 3.80… 3.33… 3.65… 3.17… 2.50… 2.84… 3.21… 2.98… #>  3     3 2.57… 4.41… 3.22… 2.48… 3.54… 3.47… 3.72… 2.83… 2.61… 2.31… 2.77… 3.14… #>  4     4 2.26… 4.62… 3.05… 2.35… 3.84… 3.42… 3.65… 3.22… 2.45… 2.87… 2.78… 2.76… #>  5     5 2.62… 4.81… 2.94… 2.28… 4.07… 3.41… 3.61… 3.47… 2.07… 3.07… 3.90… 2.94… #>  6     6 2.41… 4.75… 2.43… 2.40… 3.99… 3.39… 3.60… 3.07… 2.26… 3.01… 3.33… 2.72… #>  7     7 2.44… 4.97… 2.45… 2.11… 4.26… 3.36… 3.20… 3.71… 2.36… 3.25… 3.46… 2.63… #>  8     8 2.60… 4.91… 2.23… 2.20… 3.57… 3.37… 3.60… 3.62… 2.38… 3.19… 3.98… 2.87… #>  9     9 2.83… 5.37… 1.80… 1.62… 4.67… 2.83… 3.70… 4.17… 2.35… 3.66… 4.47… 2.73… #> 10    10 2.22… 4.39… 3.26… 2.76… 3.89… 3.25… 3.84… 3.25… 2.74… 2.62… 3.79… 3.15… #> # … with 665 more rows, and 13 more variables: P <chr>, Q <chr>, R <chr>, #> #   S <chr>, T <chr>, V <chr>, W <chr>, Y <chr>, MAP <chr>, CONS <chr>, #> #   RF <chr>, MM <chr>, CS <chr> #>  #> $model$insert_emissions #> # A tibble: 676 × 21 #>     node A     C     D     E     F     G     H     I     K     L     M     N     #>    <dbl> <chr> <chr> <chr> <chr> <chr> <chr> <chr> <chr> <chr> <chr> <chr> <chr> #>  1     1 2.68… 4.42… 2.77… 2.73… 3.46… 2.40… 3.72… 3.29… 2.67… 2.69… 4.24… 2.90… #>  2     2 2.68… 4.42… 2.77… 2.73… 3.46… 2.40… 3.72… 3.29… 2.67… 2.69… 4.24… 2.90… #>  3     3 2.68… 4.42… 2.77… 2.73… 3.46… 2.40… 3.72… 3.29… 2.67… 2.69… 4.24… 2.90… #>  4     4 2.68… 4.42… 2.77… 2.73… 3.46… 2.40… 3.72… 3.29… 2.67… 2.69… 4.24… 2.90… #>  5     5 2.68… 4.42… 2.77… 2.73… 3.46… 2.40… 3.72… 3.29… 2.67… 2.69… 4.24… 2.90… #>  6     6 2.68… 4.42… 2.77… 2.73… 3.46… 2.40… 3.72… 3.29… 2.67… 2.69… 4.24… 2.90… #>  7     7 2.68… 4.42… 2.77… 2.73… 3.46… 2.40… 3.72… 3.29… 2.67… 2.69… 4.24… 2.90… #>  8     8 2.68… 4.42… 2.77… 2.73… 3.46… 2.40… 3.72… 3.29… 2.67… 2.69… 4.24… 2.90… #>  9     9 2.68… 4.42… 2.77… 2.73… 3.46… 2.40… 3.72… 3.29… 2.67… 2.69… 4.24… 2.90… #> 10    10 2.68… 4.42… 2.77… 2.73… 3.46… 2.40… 3.72… 3.29… 2.67… 2.69… 4.24… 2.90… #> # … with 666 more rows, and 8 more variables: P <chr>, Q <chr>, R <chr>, #> #   S <chr>, T <chr>, V <chr>, W <chr>, Y <chr> #>  #> $model$state_transitions #> # A tibble: 676 × 8 #>     node m_m     m_i     m_d     i_m     i_i     d_m     d_d     #>    <dbl> <chr>   <chr>   <chr>   <chr>   <chr>   <chr>   <chr>   #>  1     1 0.03329 3.81496 4.53730 0.61958 0.77255 0.72688 0.66051 #>  2     2 0.03329 3.81496 4.53730 0.61958 0.77255 0.72688 0.66051 #>  3     3 0.03329 3.81496 4.53730 0.61958 0.77255 0.50614 0.92337 #>  4     4 0.02823 3.97731 4.69966 0.61958 0.77255 0.59972 0.79621 #>  5     5 0.02823 3.97731 4.69966 0.61958 0.77255 0.59972 0.79621 #>  6     6 0.02823 3.97731 4.69966 0.61958 0.77255 0.50570 0.92402 #>  7     7 0.02661 4.03540 4.75774 0.61958 0.77255 0.54409 0.86838 #>  8     8 0.02661 4.03540 4.75774 0.61958 0.77255 0.54409 0.86838 #>  9     9 0.02661 4.03540 4.75774 0.61958 0.77255 0.54409 0.86838 #> 10    10 0.02661 4.03540 4.75774 0.61958 0.77255 0.54409 0.86838 #> # … with 666 more rows #>  #>"},{"path":"https://leightonpayne.github.io/padlocdev/reference/read_hmm_header.html","id":null,"dir":"Reference","previous_headings":"","what":"Read the header section from a profile HMM into a list. — read_hmm_header","title":"Read the header section from a profile HMM into a list. — read_hmm_header","text":"Read header section profile HMM list.","code":""},{"path":"https://leightonpayne.github.io/padlocdev/reference/read_hmm_header.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read the header section from a profile HMM into a list. — read_hmm_header","text":"","code":"read_hmm_header(file)"},{"path":"https://leightonpayne.github.io/padlocdev/reference/read_hmm_header.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read the header section from a profile HMM into a list. — read_hmm_header","text":"file Path profile HMM (*.hmm)","code":""},{"path":"https://leightonpayne.github.io/padlocdev/reference/read_hmm_header.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read the header section from a profile HMM into a list. — read_hmm_header","text":"base::list().","code":""},{"path":"https://leightonpayne.github.io/padlocdev/reference/read_hmm_header.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Read the header section from a profile HMM into a list. — read_hmm_header","text":"","code":"read_hmm_header(padlocdev_example(\"protein.hmm\")) #> $`HMMER3/f` #> [1] \"[3.3 | Nov 2019]\" #>  #> $NAME #> [1] \"DruA1_00001\" #>  #> $LENG #> [1] \"675\" #>  #> $ALPH #> [1] \"amino\" #>  #> $ACC #> [1] \"PDLC00001\" #>  #> $DESC #> [1] \"DUF4338\" #>  #> $MAXL #> integer(0) #>  #> $RF #> [1] \"no\" #>  #> $MM #> [1] \"no\" #>  #> $CONS #> [1] \"yes\" #>  #> $CS #> [1] \"no\" #>  #> $MAP #> [1] \"yes\" #>  #> $DATE #> [1] \"Thu Jan  7 16:11:08 2021\" #>  #> $COM #> integer(0) #>  #> $NSEQ #> [1] \"10\" #>  #> $EFFN #> [1] \"0.825195\" #>  #> $CKSUM #> [1] \"653067045\" #>  #> $GA #> integer(0) #>  #> $TC #> integer(0) #>  #> $NC #> integer(0) #>  #> $`STATS LOCAL MSV` #> [1] \"-11.9551  0.69676\" #>  #> $`STATS LOCAL VITERBI` #> [1] \"-13.0895  0.69676\" #>  #> $`STATS LOCAL FORWARD` #> [1] \"-6.4760  0.69676\" #>"},{"path":"https://leightonpayne.github.io/padlocdev/reference/read_hmm_meta.html","id":null,"dir":"Reference","previous_headings":"","what":"Read a padloc-db hmm_meta.txt file. — read_hmm_meta","title":"Read a padloc-db hmm_meta.txt file. — read_hmm_meta","text":"Read padloc-db hmm_meta.txt file.","code":""},{"path":"https://leightonpayne.github.io/padlocdev/reference/read_hmm_meta.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read a padloc-db hmm_meta.txt file. — read_hmm_meta","text":"","code":"read_hmm_meta(file)"},{"path":"https://leightonpayne.github.io/padlocdev/reference/read_hmm_meta.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read a padloc-db hmm_meta.txt file. — read_hmm_meta","text":"file Path sys_meta.txt","code":""},{"path":"https://leightonpayne.github.io/padlocdev/reference/read_hmm_meta.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read a padloc-db hmm_meta.txt file. — read_hmm_meta","text":"tibble::tibble().","code":""},{"path":"https://leightonpayne.github.io/padlocdev/reference/read_hmm_meta.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Read a padloc-db hmm_meta.txt file. — read_hmm_meta","text":"","code":"sys_meta <- read_sys_meta(padlocdev_example(\"sys_meta.txt\"))"},{"path":"https://leightonpayne.github.io/padlocdev/reference/read_padloc_model.html","id":null,"dir":"Reference","previous_headings":"","what":"Read in a padloc model (.yaml) file — read_padloc_model","title":"Read in a padloc model (.yaml) file — read_padloc_model","text":"Read padloc model (.yaml) file","code":""},{"path":"https://leightonpayne.github.io/padlocdev/reference/read_padloc_model.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read in a padloc model (.yaml) file — read_padloc_model","text":"","code":"read_padloc_model(file)"},{"path":"https://leightonpayne.github.io/padlocdev/reference/read_padloc_model.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read in a padloc model (.yaml) file — read_padloc_model","text":"file Path padloc model yaml format (*.yaml).","code":""},{"path":"https://leightonpayne.github.io/padlocdev/reference/read_padloc_model.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read in a padloc model (.yaml) file — read_padloc_model","text":"base::list().","code":""},{"path":"https://leightonpayne.github.io/padlocdev/reference/read_padloc_model.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Read in a padloc model (.yaml) file — read_padloc_model","text":"","code":"padloc_model <- read_padloc_model(padlocdev_example(\"example_model.yaml\"))"},{"path":"https://leightonpayne.github.io/padlocdev/reference/read_sys_groups.html","id":null,"dir":"Reference","previous_headings":"","what":"Read a padloc-db sys_groups.txt file. — read_sys_groups","title":"Read a padloc-db sys_groups.txt file. — read_sys_groups","text":"Read padloc-db sys_groups.txt file.","code":""},{"path":"https://leightonpayne.github.io/padlocdev/reference/read_sys_groups.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read a padloc-db sys_groups.txt file. — read_sys_groups","text":"","code":"read_sys_groups(file)"},{"path":"https://leightonpayne.github.io/padlocdev/reference/read_sys_groups.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read a padloc-db sys_groups.txt file. — read_sys_groups","text":"file Path sys_groups.txt","code":""},{"path":"https://leightonpayne.github.io/padlocdev/reference/read_sys_groups.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read a padloc-db sys_groups.txt file. — read_sys_groups","text":"tibble::tibble().","code":""},{"path":"https://leightonpayne.github.io/padlocdev/reference/read_sys_groups.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Read a padloc-db sys_groups.txt file. — read_sys_groups","text":"","code":"sys_groups <- read_sys_groups(padlocdev_example(\"sys_groups.txt\")) sys_groups #> # A tibble: 7 × 2 #>   yaml.name   group   #>   <chr>       <chr>   #> 1 SystemA_I   group_1 #> 2 SystemA_II  group_1 #> 3 SystemA_III group_1 #> 4 SystemB     group_2 #> 5 SystemC     group_3 #> 6 SystemD     group_3 #> 7 SystemE     group_3"},{"path":"https://leightonpayne.github.io/padlocdev/reference/read_sys_meta.html","id":null,"dir":"Reference","previous_headings":"","what":"Read a padloc-db sys_meta.txt file. — read_sys_meta","title":"Read a padloc-db sys_meta.txt file. — read_sys_meta","text":"Read padloc-db sys_meta.txt file.","code":""},{"path":"https://leightonpayne.github.io/padlocdev/reference/read_sys_meta.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read a padloc-db sys_meta.txt file. — read_sys_meta","text":"","code":"read_sys_meta(file)"},{"path":"https://leightonpayne.github.io/padlocdev/reference/read_sys_meta.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read a padloc-db sys_meta.txt file. — read_sys_meta","text":"file Path sys_meta.txt.","code":""},{"path":"https://leightonpayne.github.io/padlocdev/reference/read_sys_meta.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read a padloc-db sys_meta.txt file. — read_sys_meta","text":"tibble::tibble().","code":""},{"path":"https://leightonpayne.github.io/padlocdev/reference/read_sys_meta.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Read a padloc-db sys_meta.txt file. — read_sys_meta","text":"","code":"sys_meta <- read_sys_meta(padlocdev_example(\"sys_meta.txt\")) sys_meta #> # A tibble: 7 × 5 #>   system          type     yaml.name   search notes                              #>   <chr>           <chr>    <chr>       <lgl>  <chr>                              #> 1 System Family A Type I   SystemA_I   TRUE   This is the first type of system … #> 2 System Family A Type II  SystemA_II  TRUE   This is the second type of system… #> 3 System Family A Type III SystemA_III TRUE   This is the third type of system … #> 4 System Family B NA       SystemB     TRUE   This system has an unknown mechan… #> 5 System Family C NA       SystemC     TRUE   This system has a well known mech… #> 6 System Family D NA       SystemD     TRUE   This system should probably belon… #> 7 System Family E NA       SystemE     TRUE   This system should also probably …"}]
