[{"path":"https://leightonpayne.github.io/padlocdev/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2023 padlocdev authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://leightonpayne.github.io/padlocdev/articles/padlocdev.html","id":"vignettes","dir":"Articles","previous_headings":"","what":"Vignettes","title":"Introduction to padlocdev","text":"Explore available vignettes information capabilities padlocdev typical workflows processing padloc-db data.","code":""},{"path":"https://leightonpayne.github.io/padlocdev/articles/padlocdev.html","id":"example-files","dir":"Articles","previous_headings":"","what":"Example files","title":"Introduction to padlocdev","text":"package includes example files demonstrating functions. files can listed accessed function padlocdev_example(). following code, ’ll see function used access example files. file = ... specified, padlocdev_example() lists example files (located package directory padlocdev/inst/exdata/). Otherwise, full path file generated.","code":"padlocdev_example() #>   [1] \"padloc-db\"                                  #>   [2] \"padloc-db/hmm\"                              #>   [3] \"padloc-db/hmm/PDLC00150.hmm\"                #>   [4] \"padloc-db/hmm/PDLC00151.hmm\"                #>   [5] \"padloc-db/hmm/PDLC00174.hmm\"                #>   [6] \"padloc-db/hmm/PDLC00175.hmm\"                #>   [7] \"padloc-db/hmm/PDLC00195.hmm\"                #>   [8] \"padloc-db/hmm/PDLC00196.hmm\"                #>   [9] \"padloc-db/hmm/PDLC00199.hmm\"                #>  [10] \"padloc-db/hmm/PDLC00200.hmm\"                #>  [11] \"padloc-db/hmm/PDLC00202.hmm\"                #>  [12] \"padloc-db/hmm/PDLC00203.hmm\"                #>  [13] \"padloc-db/hmm/PDLC02171.hmm\"                #>  [14] \"padloc-db/hmm/PDLC02172.hmm\"                #>  [15] \"padloc-db/hmm/PDLC02173.hmm\"                #>  [16] \"padloc-db/hmm/PDLC02174.hmm\"                #>  [17] \"padloc-db/hmm/PDLC02175.hmm\"                #>  [18] \"padloc-db/hmm/PDLC02176.hmm\"                #>  [19] \"padloc-db/hmm/PDLC02177.hmm\"                #>  [20] \"padloc-db/hmm/PDLC02178.hmm\"                #>  [21] \"padloc-db/hmm/PDLC02181.hmm\"                #>  [22] \"padloc-db/hmm/PDLC02182.hmm\"                #>  [23] \"padloc-db/hmm/PDLC02437.hmm\"                #>  [24] \"padloc-db/hmm/PDLC02438.hmm\"                #>  [25] \"padloc-db/hmm/PDLC02459.hmm\"                #>  [26] \"padloc-db/hmm/PDLC02460.hmm\"                #>  [27] \"padloc-db/hmm/PDLC02471.hmm\"                #>  [28] \"padloc-db/hmm/PDLC02472.hmm\"                #>  [29] \"padloc-db/hmm/PDLC02494.hmm\"                #>  [30] \"padloc-db/hmm/PDLC02495.hmm\"                #>  [31] \"padloc-db/hmm/PDLC02496.hmm\"                #>  [32] \"padloc-db/hmm/PDLC02497.hmm\"                #>  [33] \"padloc-db/hmm/PDLC02500.hmm\"                #>  [34] \"padloc-db/hmm/PDLC02501.hmm\"                #>  [35] \"padloc-db/hmm/PDLC02504.hmm\"                #>  [36] \"padloc-db/hmm/PDLC02505.hmm\"                #>  [37] \"padloc-db/hmm/PDLC02506.hmm\"                #>  [38] \"padloc-db/hmm/PDLC02510.hmm\"                #>  [39] \"padloc-db/hmm/PDLC02511.hmm\"                #>  [40] \"padloc-db/hmm/PDLC02512.hmm\"                #>  [41] \"padloc-db/hmm/PDLC02513.hmm\"                #>  [42] \"padloc-db/hmm/PDLC02515.hmm\"                #>  [43] \"padloc-db/hmm/PDLC02516.hmm\"                #>  [44] \"padloc-db/hmm/PDLC02541.hmm\"                #>  [45] \"padloc-db/hmm/PDLC02542.hmm\"                #>  [46] \"padloc-db/hmm_meta.txt\"                     #>  [47] \"padloc-db/sys\"                              #>  [48] \"padloc-db/sys/DRT_class_I.yaml\"             #>  [49] \"padloc-db/sys/DRT_class_II.yaml\"            #>  [50] \"padloc-db/sys/DRT_class_III.yaml\"           #>  [51] \"padloc-db/sys/DRT_other.yaml\"               #>  [52] \"padloc-db/sys/DRT_type_I.yaml\"              #>  [53] \"padloc-db/sys/DRT_type_II.yaml\"             #>  [54] \"padloc-db/sys/DRT_type_III.yaml\"            #>  [55] \"padloc-db/sys/DRT_type_IV.yaml\"             #>  [56] \"padloc-db/sys/DRT_type_V.yaml\"              #>  [57] \"padloc-db/sys/brex_other.yaml\"              #>  [58] \"padloc-db/sys/brex_type_I.yaml\"             #>  [59] \"padloc-db/sys/brex_type_II.yaml\"            #>  [60] \"padloc-db/sys/brex_type_III.yaml\"           #>  [61] \"padloc-db/sys/brex_type_IV.yaml\"            #>  [62] \"padloc-db/sys/brex_type_V.yaml\"             #>  [63] \"padloc-db/sys/brex_type_VI.yaml\"            #>  [64] \"padloc-db/sys/hachiman_other.yaml\"          #>  [65] \"padloc-db/sys/hachiman_type_I.yaml\"         #>  [66] \"padloc-db/sys/hachiman_type_II.yaml\"        #>  [67] \"padloc-db/sys_groups.txt\"                   #>  [68] \"padloc-db/sys_meta.txt\"                     #>  [69] \"padloc-db-broken\"                           #>  [70] \"padloc-db-broken/hmm\"                       #>  [71] \"padloc-db-broken/hmm/PDLC00150.hmm\"         #>  [72] \"padloc-db-broken/hmm/PDLC00151.hmm\"         #>  [73] \"padloc-db-broken/hmm/PDLC00174.hmm\"         #>  [74] \"padloc-db-broken/hmm/PDLC00175.hmm\"         #>  [75] \"padloc-db-broken/hmm/PDLC00195.hmm\"         #>  [76] \"padloc-db-broken/hmm/PDLC00196.hmm\"         #>  [77] \"padloc-db-broken/hmm/PDLC00199.hmm\"         #>  [78] \"padloc-db-broken/hmm/PDLC00200.hmm\"         #>  [79] \"padloc-db-broken/hmm/PDLC00202.hmm\"         #>  [80] \"padloc-db-broken/hmm/PDLC00203.hmm\"         #>  [81] \"padloc-db-broken/hmm/PDLC02171.hmm\"         #>  [82] \"padloc-db-broken/hmm/PDLC02172.hmm\"         #>  [83] \"padloc-db-broken/hmm/PDLC02173.hmm\"         #>  [84] \"padloc-db-broken/hmm/PDLC02174.hmm\"         #>  [85] \"padloc-db-broken/hmm/PDLC02175.hmm\"         #>  [86] \"padloc-db-broken/hmm/PDLC02176.hmm\"         #>  [87] \"padloc-db-broken/hmm/PDLC02177.hmm\"         #>  [88] \"padloc-db-broken/hmm/PDLC02178.hmm\"         #>  [89] \"padloc-db-broken/hmm/PDLC02181.hmm\"         #>  [90] \"padloc-db-broken/hmm/PDLC02182.hmm\"         #>  [91] \"padloc-db-broken/hmm/PDLC02438.hmm\"         #>  [92] \"padloc-db-broken/hmm/PDLC02459.hmm\"         #>  [93] \"padloc-db-broken/hmm/PDLC02460.hmm\"         #>  [94] \"padloc-db-broken/hmm/PDLC02471.hmm\"         #>  [95] \"padloc-db-broken/hmm/PDLC02472.hmm\"         #>  [96] \"padloc-db-broken/hmm/PDLC02494.hmm\"         #>  [97] \"padloc-db-broken/hmm/PDLC02496.hmm\"         #>  [98] \"padloc-db-broken/hmm/PDLC02497.hmm\"         #>  [99] \"padloc-db-broken/hmm/PDLC02500.hmm\"         #> [100] \"padloc-db-broken/hmm/PDLC02501.hmm\"         #> [101] \"padloc-db-broken/hmm/PDLC02504.hmm\"         #> [102] \"padloc-db-broken/hmm/PDLC02505.hmm\"         #> [103] \"padloc-db-broken/hmm/PDLC02506.hmm\"         #> [104] \"padloc-db-broken/hmm/PDLC02512.hmm\"         #> [105] \"padloc-db-broken/hmm/PDLC02513.hmm\"         #> [106] \"padloc-db-broken/hmm/PDLC02515.hmm\"         #> [107] \"padloc-db-broken/hmm/PDLC02516.hmm\"         #> [108] \"padloc-db-broken/hmm/PDLC02541.hmm\"         #> [109] \"padloc-db-broken/hmm/PDLC02542.hmm\"         #> [110] \"padloc-db-broken/hmm/PDLC03000.hmm\"         #> [111] \"padloc-db-broken/hmm/PDLC04000.hmm\"         #> [112] \"padloc-db-broken/hmm/PDLC05000.hmm\"         #> [113] \"padloc-db-broken/hmm_meta.txt\"              #> [114] \"padloc-db-broken/sys\"                       #> [115] \"padloc-db-broken/sys/DRT_class_I.yaml\"      #> [116] \"padloc-db-broken/sys/DRT_class_II.yaml\"     #> [117] \"padloc-db-broken/sys/DRT_class_III.yaml\"    #> [118] \"padloc-db-broken/sys/DRT_other.yaml\"        #> [119] \"padloc-db-broken/sys/DRT_type_I.yaml\"       #> [120] \"padloc-db-broken/sys/DRT_type_III.yaml\"     #> [121] \"padloc-db-broken/sys/DRT_type_IV.yaml\"      #> [122] \"padloc-db-broken/sys/DRT_type_V.yaml\"       #> [123] \"padloc-db-broken/sys/brex_other.yaml\"       #> [124] \"padloc-db-broken/sys/brex_type_I.yaml\"      #> [125] \"padloc-db-broken/sys/brex_type_III.yaml\"    #> [126] \"padloc-db-broken/sys/brex_type_IV.yaml\"     #> [127] \"padloc-db-broken/sys/brex_type_V.yaml\"      #> [128] \"padloc-db-broken/sys/brex_type_VI.yaml\"     #> [129] \"padloc-db-broken/sys/generic_system_A.yaml\" #> [130] \"padloc-db-broken/sys/generic_system_B.yaml\" #> [131] \"padloc-db-broken/sys/hachiman_other.yaml\"   #> [132] \"padloc-db-broken/sys/hachiman_type_I.yaml\"  #> [133] \"padloc-db-broken/sys_groups.txt\"            #> [134] \"padloc-db-broken/sys_meta.txt\" padlocdev_example(file = \"padloc-db/hmm/PDLC00150.hmm\") #> /home/runner/work/_temp/Library/padlocdev/extdata/padloc-db/hmm/PDLC00150.hmm"},{"path":"https://leightonpayne.github.io/padlocdev/articles/preparing-data.html","id":"spliting-a-database-into-groups","dir":"Articles","previous_headings":"","what":"Spliting a database into groups","title":"Preparing padloc-db data for use","text":"padloc-db validated, useful split groups batched searches padloc. Read sys_groups.txt using read_sys_groups(). Use filter_models() filter list padloc models belonging particular group, defined system groups table. pull copy HMMs particular system group new directory use system_cp_hmm(). , related system_cp_* functions, use ?fs package manipulate system files. trying copy HMMs, ’s important verify name HMM file corresponds accession .e. ACC field HMM header. important function database, though probably good practice, important exercise accession ’ll using identify HMMs copy. Use verify_hmm_names() check names match. returns list two tibbles, names_match lists HMMs matching file accession names, names_mismatch lists HMMs different file accession names. case names match, can continue. Use filter_hmm_meta() extract rows HMM metadata table actually relevant Use wrapper divide_database() create sub-databases groups system groups table.","code":"path <- padlocdev_example(\"sys_groups.txt\") #> Error: #> ! Can't find package file. sys_groups <- read_sys_groups(path) #> Error in standardise_path(file): object 'path' not found head(sys_groups) #> Error in head(sys_groups): object 'sys_groups' not found path <- padlocdev_example(\"sys\") #> Error: #> ! Can't find package file. models <- multi_read_padloc_model(path) #> Error in list.files(directory, full.names = TRUE, pattern = \"*.yaml\"): object 'path' not found models_group_1 <- filter_models(models, sys_groups, \"group_1\") #> Error in dplyr::filter(sys_groups, group %in% group_name): object 'sys_groups' not found names(models_group_1) #> Error in eval(expr, envir, enclos): object 'models_group_1' not found hmm_meta <- padlocdev_example(\"hmm_meta.txt\") |> read_hmm_meta() #> Error: #> ! Can't find package file. hmm_meta_expanded <- expand_hmm_meta(hmm_meta) #> Error in tidyr::separate_rows(hmm_meta, dplyr::all_of(multi_assigments), : object 'hmm_meta' not found hmm_meta_group_1 <- filter_hmm_meta(models_group_1, hmm_meta_expanded) #> Error in vec_check_list(x): object 'models_group_1' not found group_1_names_verify <- verify_hmm_names(models_group_1) #> Error in vec_check_list(x): object 'models_group_1' not found group_1_names_verify #> Error in eval(expr, envir, enclos): object 'group_1_names_verify' not found system_cp_hmm() #> Error in system_cp_files(hmm_list, \".hmm\", path, new_path): argument \"new_path\" is missing, with no default # divide_database(  #   sys_expanded = sys_expanded,  #   sys_groups = sys_groups,  #   hmm_meta_expanded = hmm_meta_expanded,  #   sys_meta = sys_meta  #   path = \"path/to/database\",  #   new_path = \"/path/to/new/database\"  # )"},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":"https://leightonpayne.github.io/padlocdev/articles/reading-data.html","id":"reading-padloc-db-files","dir":"Articles","previous_headings":"","what":"Reading padloc-db files","title":"Reading padloc-db data","text":"can read profile HMMs, system models, HMM metadata table, system metadata table, system group information following functions.","code":""},{"path":"https://leightonpayne.github.io/padlocdev/articles/reading-data.html","id":"metadata-tables","dir":"Articles","previous_headings":"Reading padloc-db files","what":"Metadata tables","title":"Reading padloc-db data","text":"Read hmm_meta.txt read_hmm_meta(). Read sys_meta.txt read_sys_meta(). Read sys_groups.txt read_sys_groups(). metadata tables stored tibble objects, can operated-tibble (see ?tibble::tbl_df information).","code":"path <- padlocdev_example(\"padloc-db/hmm_meta.txt\") hmm_meta <- read_hmm_meta(path) head(hmm_meta) #> # A tibble: 6 × 15 #>   hmm.acc hmm.n…¹ hmm.d…² prote…³ secon…⁴ author numbe…⁵ lengt…⁶ e.val…⁷ hmm.c…⁸ #>   <chr>   <chr>   <chr>   <chr>   <chr>   <chr>    <dbl>   <dbl>   <dbl>   <dbl> #> 1 PDLC00… HamA1_… DUF183… HamA1|… NA      Payne…      49     310 0.00001     0.3 #> 2 PDLC00… HamA1_… DUF183… HamA1|… NA      Payne…       6     436 0.00001     0.3 #> 3 PDLC00… HamB1_… DEAD-b… HamB1|… NA      Payne…      56    1163 0.00001     0.3 #> 4 PDLC00… HamB1_… DEAD-b… HamB1|… NA      Payne…       5    1000 0.00001     0.3 #> 5 PDLC00… HamA2_… DUF183… HamA2|… NA      Payne…       7     283 0.00001     0.3 #> 6 PDLC00… HamA2_… DUF183… HamA2|… NA      Payne…     144     315 0.00001     0.3 #> # … with 5 more variables: target.coverage.threshold <dbl>, system <chr>, #> #   literature.ref <chr>, database.ref <chr>, comments <chr>, and abbreviated #> #   variable names ¹​hmm.name, ²​hmm.description, ³​protein.name, ⁴​secondary.name, #> #   ⁵​number.seq, ⁶​length.hmm, ⁷​e.value.threshold, ⁸​hmm.coverage.threshold path <- padlocdev_example(\"padloc-db/sys_meta.txt\") sys_meta <- read_sys_meta(path) head(sys_meta) #> # A tibble: 6 × 5 #>   system type     yaml.name     search notes #>   <chr>  <chr>    <chr>         <lgl>  <chr> #> 1 BREX   other    brex_other    TRUE   NA    #> 2 BREX   type I   brex_type_I   TRUE   NA    #> 3 BREX   type II  brex_type_II  TRUE   NA    #> 4 BREX   type III brex_type_III TRUE   NA    #> 5 BREX   type IV  brex_type_IV  TRUE   NA    #> 6 BREX   type V   brex_type_V   TRUE   NA path <- padlocdev_example(\"padloc-db/sys_groups.txt\") sys_groups <- read_sys_groups(path) head(sys_groups) #> # A tibble: 6 × 2 #>   yaml.name     group   #>   <chr>         <chr>   #> 1 brex_other    group_1 #> 2 brex_type_I   group_1 #> 3 brex_type_II  group_1 #> 4 brex_type_III group_2 #> 5 brex_type_IV  group_2 #> 6 brex_type_V   group_2"},{"path":"https://leightonpayne.github.io/padlocdev/articles/reading-data.html","id":"profile-hmms","dir":"Articles","previous_headings":"Reading padloc-db files","what":"Profile HMMs","title":"Reading padloc-db data","text":"Read full profile HMM, including header model information read_hmm(). Profile HMMs stored list objects two elements, header model. Accessing elements works list. model information HMM can quite large, can slow reading. Currently, use reading model information anyway, least purpose data validation. read just header information use read_hmm_header() instead. object returned read_hmm_header() equivalent list returned read_hmm(), header element.","code":"path <- padlocdev_example(\"padloc-db/hmm/PDLC00150.hmm\") hmm <- read_hmm(path) names(hmm) #> [1] \"header\" \"model\" names(hmm[[\"header\"]]) #>  [1] \"HMMER3/f\"            \"NAME\"                \"LENG\"                #>  [4] \"ALPH\"                \"ACC\"                 \"DESC\"                #>  [7] \"MAXL\"                \"RF\"                  \"MM\"                  #> [10] \"CONS\"                \"CS\"                  \"MAP\"                 #> [13] \"DATE\"                \"COM\"                 \"NSEQ\"                #> [16] \"EFFN\"                \"CKSUM\"               \"GA\"                  #> [19] \"TC\"                  \"NC\"                  \"STATS LOCAL MSV\"     #> [22] \"STATS LOCAL VITERBI\" \"STATS LOCAL FORWARD\" names(hmm[[\"model\"]]) #> [1] \"compo\"             \"match_emissions\"   \"insert_emissions\"  #> [4] \"state_transitions\" hmm[[\"header\"]][[\"NAME\"]] #> [1] \"HamA1_00001\"  # Or... hmm$header$NAME #> [1] \"HamA1_00001\"  # Or... purrr::pluck(hmm, \"header\", \"NAME\") #> [1] \"HamA1_00001\"  # Etc... object.size(hmm[[\"header\"]]) |> print(units = \"Kb\") #> 4.2 Kb object.size(hmm[[\"model\"]]) |> print(units = \"Kb\") #> 519.8 Kb hmm_header <- read_hmm_header(path) names(hmm_header) #> [1] \"header\" names(hmm_header[[\"header\"]]) #>  [1] \"HMMER3/f\"            \"NAME\"                \"LENG\"                #>  [4] \"ALPH\"                \"ACC\"                 \"DESC\"                #>  [7] \"MAXL\"                \"RF\"                  \"MM\"                  #> [10] \"CONS\"                \"CS\"                  \"MAP\"                 #> [13] \"DATE\"                \"COM\"                 \"NSEQ\"                #> [16] \"EFFN\"                \"CKSUM\"               \"GA\"                  #> [19] \"TC\"                  \"NC\"                  \"STATS LOCAL MSV\"     #> [22] \"STATS LOCAL VITERBI\" \"STATS LOCAL FORWARD\""},{"path":"https://leightonpayne.github.io/padlocdev/articles/reading-data.html","id":"system-models","dir":"Articles","previous_headings":"Reading padloc-db files","what":"System models","title":"Reading padloc-db data","text":"Read system models read_padloc_model(). System models also stored list objects element corresponding field original model file.","code":"path <- padlocdev_example(\"padloc-db/sys/brex_type_I.yaml\") model <- read_padloc_model(path) names(model) #> [1] \"maximum_separation\" \"minimum_core\"       \"minimum_total\"      #> [4] \"core_genes\"         \"optional_genes\"     \"prohibited_genes\" model[[\"core_genes\"]] #> [1] \"BrxA\" \"BrxB\" \"BrxC\" \"PglX\" \"PglZ\" \"BrxL\""},{"path":"https://leightonpayne.github.io/padlocdev/articles/reading-data.html","id":"reading-multiple-files","dir":"Articles","previous_headings":"Reading padloc-db files","what":"Reading multiple files","title":"Reading padloc-db data","text":"Wrappers provided reading system model profile HMM files directory list. name element list derived name file read-. Use multi_read_padloc_model() read system models. Use multi_read_hmm() read profile HMMs. larger databases, ’s efficient just read header information HMM.","code":"path <- padlocdev_example(\"padloc-db/sys\") models <- multi_read_padloc_model(path) names(models) #>  [1] \"brex_other\"       \"brex_type_I\"      \"brex_type_II\"     \"brex_type_III\"    #>  [5] \"brex_type_IV\"     \"brex_type_V\"      \"brex_type_VI\"     \"DRT_class_I\"      #>  [9] \"DRT_class_II\"     \"DRT_class_III\"    \"DRT_other\"        \"DRT_type_I\"       #> [13] \"DRT_type_II\"      \"DRT_type_III\"     \"DRT_type_IV\"      \"DRT_type_V\"       #> [17] \"hachiman_other\"   \"hachiman_type_I\"  \"hachiman_type_II\" models[[\"brex_type_I\"]] #> $maximum_separation #> [1] 3 #>  #> $minimum_core #> [1] 6 #>  #> $minimum_total #> [1] 6 #>  #> $core_genes #> [1] \"BrxA\" \"BrxB\" \"BrxC\" \"PglX\" \"PglZ\" \"BrxL\" #>  #> $optional_genes #> [1] \"NA\" #>  #> $prohibited_genes #> [1] \"BrxE\" path <- padlocdev_example(\"padloc-db/hmm\") hmms <- multi_read_hmm(path) names(hmmshmm_headers <- multi_read_hmm_header(path) names(hmm_headers},{"path":"https://leightonpayne.github.io/padlocdev/articles/validating-data.html","id":"expanding-hmm-metadata-table","dir":"Articles","previous_headings":"","what":"Expanding HMM metadata table","title":"Validating padloc-db data","text":"raw HMM metadata table read-read_hmm_meta() can multiple names listed protein.name secondary.name (separated delimiter |). split assignments multiple rows, use expand_hmm_meta(). HMM metadata table can re-collapsed using collapse_hmm_meta().","code":"hmm_meta <- padlocdev_example(\"padloc-db/hmm_meta.txt\") |> read_hmm_meta() hmm_meta |> subset(grepl(\"HamA\", protein.name)) #> # A tibble: 4 × 15 #>   hmm.acc hmm.n…¹ hmm.d…² prote…³ secon…⁴ author numbe…⁵ lengt…⁶ e.val…⁷ hmm.c…⁸ #>   <chr>   <chr>   <chr>   <chr>   <chr>   <chr>    <dbl>   <dbl>   <dbl>   <dbl> #> 1 PDLC00… HamA1_… DUF183… HamA1|… NA      Payne…      49     310 0.00001     0.3 #> 2 PDLC00… HamA1_… DUF183… HamA1|… NA      Payne…       6     436 0.00001     0.3 #> 3 PDLC00… HamA2_… DUF183… HamA2|… NA      Payne…       7     283 0.00001     0.3 #> 4 PDLC00… HamA2_… DUF183… HamA2|… NA      Payne…     144     315 0.00001     0.3 #> # … with 5 more variables: target.coverage.threshold <dbl>, system <chr>, #> #   literature.ref <chr>, database.ref <chr>, comments <chr>, and abbreviated #> #   variable names ¹​hmm.name, ²​hmm.description, ³​protein.name, ⁴​secondary.name, #> #   ⁵​number.seq, ⁶​length.hmm, ⁷​e.value.threshold, ⁸​hmm.coverage.threshold hmm_meta_expanded <- expand_hmm_meta(hmm_meta) hmm_meta_expanded |> subset(grepl(\"HamA\", protein.name)) #> # A tibble: 8 × 15 #>   hmm.acc hmm.n…¹ hmm.d…² prote…³ secon…⁴ author numbe…⁵ lengt…⁶ e.val…⁷ hmm.c…⁸ #>   <chr>   <chr>   <chr>   <chr>   <chr>   <chr>    <dbl>   <dbl>   <dbl>   <dbl> #> 1 PDLC00… HamA1_… DUF183… HamA1   NA      Payne…      49     310 0.00001     0.3 #> 2 PDLC00… HamA1_… DUF183… HamA    NA      Payne…      49     310 0.00001     0.3 #> 3 PDLC00… HamA1_… DUF183… HamA1   NA      Payne…       6     436 0.00001     0.3 #> 4 PDLC00… HamA1_… DUF183… HamA    NA      Payne…       6     436 0.00001     0.3 #> 5 PDLC00… HamA2_… DUF183… HamA2   NA      Payne…       7     283 0.00001     0.3 #> 6 PDLC00… HamA2_… DUF183… HamA    NA      Payne…       7     283 0.00001     0.3 #> 7 PDLC00… HamA2_… DUF183… HamA2   NA      Payne…     144     315 0.00001     0.3 #> 8 PDLC00… HamA2_… DUF183… HamA    NA      Payne…     144     315 0.00001     0.3 #> # … with 5 more variables: target.coverage.threshold <dbl>, system <chr>, #> #   literature.ref <chr>, database.ref <chr>, comments <chr>, and abbreviated #> #   variable names ¹​hmm.name, ²​hmm.description, ³​protein.name, ⁴​secondary.name, #> #   ⁵​number.seq, ⁶​length.hmm, ⁷​e.value.threshold, ⁸​hmm.coverage.threshold hmm_meta_collapsed <- collapse_hmm_meta(hmm_meta_expanded) hmm_meta_collapsed |> subset(grepl(\"HamA\", protein.name)) #> # A tibble: 4 × 15 #>   hmm.acc hmm.n…¹ hmm.d…² prote…³ secon…⁴ author numbe…⁵ lengt…⁶ e.val…⁷ hmm.c…⁸ #>   <chr>   <chr>   <chr>   <chr>   <chr>   <chr>    <dbl>   <dbl>   <dbl>   <dbl> #> 1 PDLC00… HamA1_… DUF183… HamA1|… NA      Payne…      49     310 0.00001     0.3 #> 2 PDLC00… HamA1_… DUF183… HamA1|… NA      Payne…       6     436 0.00001     0.3 #> 3 PDLC00… HamA2_… DUF183… HamA2|… NA      Payne…       7     283 0.00001     0.3 #> 4 PDLC00… HamA2_… DUF183… HamA2|… NA      Payne…     144     315 0.00001     0.3 #> # … with 5 more variables: target.coverage.threshold <dbl>, system <chr>, #> #   literature.ref <chr>, database.ref <chr>, comments <chr>, and abbreviated #> #   variable names ¹​hmm.name, ²​hmm.description, ³​protein.name, ⁴​secondary.name, #> #   ⁵​number.seq, ⁶​length.hmm, ⁷​e.value.threshold, ⁸​hmm.coverage.threshold"},{"path":"https://leightonpayne.github.io/padlocdev/articles/validating-data.html","id":"expanding-secondary-gene-assignments","dir":"Articles","previous_headings":"","what":"Expanding secondary gene assignments","title":"Validating padloc-db data","text":"Raw system model files can contain references gene groups .k.secondary.name assignments. testing model validity, gene groups need expanded. First, read data. model DRT_class_II one ‘gene’ optional_genes .e.  Drt_class_II actually group genes. Several genes HMM metadata table assigned Drt_class_II secondary.name group together. Use expand_gene_groups() expand gene groups particuar gene category, based secondary.name assignments HMM metadata table. can assigned back onto model. genes listed gene category expanded, part gene group also get carried . wrapper provided expand gene assignments gene categories system models list, assign back onto models.","code":"model <- padlocdev_example(\"padloc-db/sys/DRT_class_II.yaml\") |> read_padloc_model() model[[\"core_genes\"]] #> [1] \"Drt_class_II\" hmm_meta_expanded |> subset(secondary.name == \"Drt_class_II\") #> # A tibble: 4 × 15 #>   hmm.acc hmm.n…¹ hmm.d…² prote…³ secon…⁴ author numbe…⁵ lengt…⁶ e.val…⁷ hmm.c…⁸ #>   <chr>   <chr>   <chr>   <chr>   <chr>   <chr>    <dbl>   <dbl>   <dbl>   <dbl> #> 1 PDLC02… Drt2_0… NA      Drt2    Drt_cl… Payne…      92     425   1e-25     0.5 #> 2 PDLC02… Drt3a_… NA      Drt3a   Drt_cl… Payne…      53     403   1e-25     0.8 #> 3 PDLC02… Drt3a_… NA      Drt3a   Drt_cl… Payne…      68     417   1e-25     0.8 #> 4 PDLC02… Drt3b_… NA      Drt3b   Drt_cl… Payne…     107     651   1e- 5     0.3 #> # … with 5 more variables: target.coverage.threshold <dbl>, system <chr>, #> #   literature.ref <chr>, database.ref <chr>, comments <chr>, and abbreviated #> #   variable names ¹​hmm.name, ²​hmm.description, ³​protein.name, ⁴​secondary.name, #> #   ⁵​number.seq, ⁶​length.hmm, ⁷​e.value.threshold, ⁸​hmm.coverage.threshold genes <- expand_gene_groups(model, \"core_genes\", hmm_meta_expanded) genes #> [1] \"Drt2\"  \"Drt3a\" \"Drt3b\" model[[\"core_genes\"]] <- genes model[[\"core_genes\"]] #> [1] \"Drt2\"  \"Drt3a\" \"Drt3b\" models <- padlocdev_example(\"padloc-db/sys\") |> multi_read_padloc_model() models[[\"DRT_class_II\"]][c(\"core_genes\", \"optional_genes\", \"prohibited_genes\")] #> $core_genes #> [1] \"Drt_class_II\" #>  #> $optional_genes #> [1] \"NA\" #>  #> $prohibited_genes #> [1] \"Drt_class_I\"   \"Drt_class_III\" models_expanded <- expand_gene_groups_all(models, hmm_meta_expanded) models_expanded[[\"DRT_class_II\"]][c(\"core_genes\", \"optional_genes\", \"prohibited_genes\")] #> $core_genes #> [1] \"Drt2\"  \"Drt3a\" \"Drt3b\" #>  #> $optional_genes #> [1] \"NA\" #>  #> $prohibited_genes #> [1] \"Drt1a\" \"Drt1b\" \"Drt4\"  \"Drt5\""},{"path":"https://leightonpayne.github.io/padlocdev/articles/validating-data.html","id":"working-through-an-example-of-a-broken-database","dir":"Articles","previous_headings":"","what":"Working through an example of a broken database","title":"Validating padloc-db data","text":"example broken database various issues included, demonstrate database validation functions. First, ’ll read database files.","code":"path_hmm <- padlocdev_example(\"padloc-db-broken/hmm\") path_sys <- padlocdev_example(\"padloc-db-broken/sys\") path_hmm_meta <- padlocdev_example(\"padloc-db-broken/hmm_meta.txt\") path_sys_meta <- padlocdev_example(\"padloc-db-broken/sys_meta.txt\") path_sys_groups <- padlocdev_example(\"padloc-db-broken/sys_groups.txt\")  hmms <- multi_read_hmm_header(path_hmm) models <- multi_read_padloc_model(path_sys) hmm_meta <- read_hmm_meta(path_hmm_meta) sys_meta <- read_sys_meta(path_sys_meta) sys_groups <- read_sys_groups(path_sys_groups)"},{"path":"https://leightonpayne.github.io/padlocdev/articles/validating-data.html","id":"verify-that-hmm-file-names-match-their-accession","dir":"Articles","previous_headings":"Working through an example of a broken database","what":"Verify that HMM file names match their accession","title":"Validating padloc-db data","text":"trying expand anything, lets see ’s anything missing. First, ’ll check HMM file names match accessions, may affect stages validation. , use verify_hmm_names(). , can see HMMs filenames PDLC03000.hmm PDLC02505.hmm matching accession fields. ’s unclear whether filename accession fields incorrect, check whether mentions either HMMs metadata table investigate. Now can see HMM filename PDLC02505.hmm entry HMM metadata table, accession likely incorrect, updated PDLC02505. addition, HMM accession PDLC02511 entry metadata table, filename PDLC03000.hmm updated PDLC02511.hmm. HMMs listed mismatch table show metadata table, might deduce filename accession incorrect, HMM hasn’t added metadata table yet (name mismatch resolved adding), HMM included hmm directory error. Either way, cases also dealt .","code":"hmm_name_verification <- verify_hmm_names(hmms) hmm_name_verification #> $names_match #> # A tibble: 40 × 3 #>    file_name accession_field match #>    <chr>     <chr>           <lgl> #>  1 PDLC00150 PDLC00150       TRUE  #>  2 PDLC00151 PDLC00151       TRUE  #>  3 PDLC00174 PDLC00174       TRUE  #>  4 PDLC00175 PDLC00175       TRUE  #>  5 PDLC00195 PDLC00195       TRUE  #>  6 PDLC00196 PDLC00196       TRUE  #>  7 PDLC00199 PDLC00199       TRUE  #>  8 PDLC00200 PDLC00200       TRUE  #>  9 PDLC00202 PDLC00202       TRUE  #> 10 PDLC00203 PDLC00203       TRUE  #> # … with 30 more rows #>  #> $names_mismatch #> # A tibble: 2 × 3 #>   file_name accession_field match #>   <chr>     <chr>           <lgl> #> 1 PDLC02505 PDLC00012       FALSE #> 2 PDLC03000 PDLC02511       FALSE check <- list(   file_names = hmm_name_verification[[\"names_mismatch\"]][[\"file_name\"]],   accessions = hmm_name_verification[[\"names_mismatch\"]][[\"accession_field\"]] )  in_hmm_meta <- purrr::map(check, function(x) subset(hmm_meta, hmm.acc %in% x)) in_hmm_meta #> $file_names #> # A tibble: 1 × 15 #>   hmm.acc hmm.n…¹ hmm.d…² prote…³ secon…⁴ author numbe…⁵ lengt…⁶ e.val…⁷ hmm.c…⁸ #>   <chr>   <chr>   <chr>   <chr>   <chr>   <chr>    <dbl>   <dbl>   <dbl>   <dbl> #> 1 PDLC02… BrxL_0… BrxL    BrxL    NA      Payne…      NA      NA 0.00001     0.5 #> # … with 5 more variables: target.coverage.threshold <dbl>, system <chr>, #> #   literature.ref <chr>, database.ref <chr>, comments <chr>, and abbreviated #> #   variable names ¹​hmm.name, ²​hmm.description, ³​protein.name, ⁴​secondary.name, #> #   ⁵​number.seq, ⁶​length.hmm, ⁷​e.value.threshold, ⁸​hmm.coverage.threshold #>  #> $accessions #> # A tibble: 1 × 15 #>   hmm.acc hmm.n…¹ hmm.d…² prote…³ secon…⁴ author numbe…⁵ lengt…⁶ e.val…⁷ hmm.c…⁸ #>   <chr>   <chr>   <chr>   <chr>   <chr>   <chr>    <dbl>   <dbl>   <dbl>   <dbl> #> 1 PDLC02… BrxP_0… BrxP    BrxP    NA      Payne…      NA      NA 0.00001     0.5 #> # … with 5 more variables: target.coverage.threshold <dbl>, system <chr>, #> #   literature.ref <chr>, database.ref <chr>, comments <chr>, and abbreviated #> #   variable names ¹​hmm.name, ²​hmm.description, ³​protein.name, ⁴​secondary.name, #> #   ⁵​number.seq, ⁶​length.hmm, ⁷​e.value.threshold, ⁸​hmm.coverage.threshold"},{"path":"https://leightonpayne.github.io/padlocdev/articles/validating-data.html","id":"compare-the-profile-hmms-with-the-hmm-metadata-table","dir":"Articles","previous_headings":"Working through an example of a broken database","what":"Compare the profile HMMs with the HMM metadata table","title":"Validating padloc-db data","text":"Next, ’ll compare HMMs metadata table, ensure HMMs entry vice-versa. , use compare_hmm_files_hmm_meta(). , can see two HMMs exist, mentioned HMM metadata table: PDLC04000.hmm PDLC05000.hmm. also three HMMs mentioned metadata table exist: BrxA_00001, BrxE_00001, BrxP_00001.","code":"comparison <- compare_hmm_files_hmm_meta(hmms, hmm_meta) comparison #> $`hmm_files without hmm_meta` #> # A tibble: 2 × 4 #>   file.name NAME              ACC       hmm_files #>   <chr>     <chr>             <chr>     <lgl>     #> 1 PDLC04000 Extra_HMM         PDLC04000 TRUE      #> 2 PDLC05000 Another_extra_HMM PDLC05000 TRUE      #>  #> $`hmm_meta without hmm_files` #> # A tibble: 3 × 2 #>   hmm.name   hmm_meta #>   <chr>      <lgl>    #> 1 BrxA_00001 TRUE     #> 2 BrxE_00001 TRUE     #> 3 BrxP_00001 TRUE     #>  #> $`hmm_files with hmm_meta` #> # A tibble: 40 × 3 #>    hmm.name    hmm_files hmm_meta #>    <chr>       <lgl>     <lgl>    #>  1 HamA1_00001 TRUE      TRUE     #>  2 HamA1_00002 TRUE      TRUE     #>  3 HamB1_00001 TRUE      TRUE     #>  4 HamB1_00002 TRUE      TRUE     #>  5 HamA2_00001 TRUE      TRUE     #>  6 HamA2_00002 TRUE      TRUE     #>  7 HamB2_00001 TRUE      TRUE     #>  8 HamB2_00002 TRUE      TRUE     #>  9 HamC2_00001 TRUE      TRUE     #> 10 HamC2_00002 TRUE      TRUE     #> # … with 30 more rows"},{"path":"https://leightonpayne.github.io/padlocdev/articles/validating-data.html","id":"compare-the-system-models-with-the-system-metadata-table","dir":"Articles","previous_headings":"Working through an example of a broken database","what":"Compare the system models with the system metadata table","title":"Validating padloc-db data","text":"Next, ’ll compare system models system metadata table, ensure systems entry vice-versa. , use compare_sys_files_sys_meta(). , can see four system models entries system metadata table: brex_other, generic_system_A, generic_system_B, hachiman_type_I. Additionaly, three entries metadata table corresponding system models: brex_type_II, DRT_type_II, hachiman_type_II.","code":"comparison <- compare_sys_files_sys_meta(models, sys_meta) comparison #> $`sys_files without sys_meta` #> # A tibble: 4 × 2 #>   yaml.name        sys_files #>   <chr>            <lgl>     #> 1 brex_other       TRUE      #> 2 generic_system_A TRUE      #> 3 generic_system_B TRUE      #> 4 hachiman_type_I  TRUE      #>  #> $`sys_meta without sys_files` #> # A tibble: 3 × 2 #>   yaml.name        sys_meta #>   <chr>            <lgl>    #> 1 brex_type_II     TRUE     #> 2 DRT_type_II      TRUE     #> 3 hachiman_type_II TRUE     #>  #> $`sys_files with sys_meta` #> # A tibble: 14 × 3 #>    yaml.name      sys_files sys_meta #>    <chr>          <lgl>     <lgl>    #>  1 brex_type_I    TRUE      TRUE     #>  2 brex_type_III  TRUE      TRUE     #>  3 brex_type_IV   TRUE      TRUE     #>  4 brex_type_V    TRUE      TRUE     #>  5 brex_type_VI   TRUE      TRUE     #>  6 DRT_class_I    TRUE      TRUE     #>  7 DRT_class_II   TRUE      TRUE     #>  8 DRT_class_III  TRUE      TRUE     #>  9 DRT_other      TRUE      TRUE     #> 10 DRT_type_I     TRUE      TRUE     #> 11 DRT_type_III   TRUE      TRUE     #> 12 DRT_type_IV    TRUE      TRUE     #> 13 DRT_type_V     TRUE      TRUE     #> 14 hachiman_other TRUE      TRUE"},{"path":"https://leightonpayne.github.io/padlocdev/articles/validating-data.html","id":"compare-the-system-metadata-table-with-the-system-groups-table","dir":"Articles","previous_headings":"Working through an example of a broken database","what":"Compare the system metadata table with the system groups table","title":"Validating padloc-db data","text":"Next, ’ll compare system metadata table system groups table, ensure system models assigned group. , use compare_sys_meta_sys_groups(). , can see two systems entries metadata table assigned system groups: DRT_class_I hachiman_other. Additionally, two systems previously identified missing entries metadata table assigned groups: brex_other hachiman_type_I. systems generic_system_A generic_system_B appear entries metadata table system groups table.","code":"comparison <- compare_sys_meta_sys_groups(sys_meta, sys_groups) comparison #> $`sys_meta without sys_groups` #> # A tibble: 2 × 2 #>   yaml.name      sys_meta #>   <chr>          <lgl>    #> 1 DRT_class_I    TRUE     #> 2 hachiman_other TRUE     #>  #> $`sys_groups without sys_meta` #> # A tibble: 2 × 2 #>   yaml.name       sys_groups #>   <chr>           <lgl>      #> 1 brex_other      TRUE       #> 2 hachiman_type_I TRUE       #>  #> $`sys_meta with sys_groups` #> # A tibble: 15 × 3 #>    yaml.name        sys_meta sys_groups #>    <chr>            <lgl>    <lgl>      #>  1 brex_type_I      TRUE     TRUE       #>  2 brex_type_II     TRUE     TRUE       #>  3 brex_type_III    TRUE     TRUE       #>  4 brex_type_IV     TRUE     TRUE       #>  5 brex_type_V      TRUE     TRUE       #>  6 brex_type_VI     TRUE     TRUE       #>  7 DRT_class_II     TRUE     TRUE       #>  8 DRT_class_III    TRUE     TRUE       #>  9 DRT_other        TRUE     TRUE       #> 10 DRT_type_I       TRUE     TRUE       #> 11 DRT_type_II      TRUE     TRUE       #> 12 DRT_type_III     TRUE     TRUE       #> 13 DRT_type_IV      TRUE     TRUE       #> 14 DRT_type_V       TRUE     TRUE       #> 15 hachiman_type_II TRUE     TRUE"},{"path":"https://leightonpayne.github.io/padlocdev/articles/validating-data.html","id":"compare-the-system-models-with-the-hmm-metadata-table","dir":"Articles","previous_headings":"Working through an example of a broken database","what":"Compare the system models with the HMM metadata table","title":"Validating padloc-db data","text":"issues resolved, can expand hmm metadata table system models (purposes example, won’t correcting issues ). Now can compare expanded models expanded metadata table ensure genes mentioned models entries metadata table vice-versa. Use compare_sys_files_hmm_meta(). , can see two genes HMM metadata table used system models: HamA2 HamB2. perhaps unsuprising, already established system model present hachiman_type_II, use genes. addition, five genes used system models referenced HMM metadata table: GenA, GenB, GenC, GenD, GenE. see systems use genes, can use which_uses().","code":"hmm_meta_expanded <- expand_hmm_meta(hmm_meta) models_expanded <- expand_gene_groups_all(models, hmm_meta_expanded) comparison <- compare_sys_files_hmm_meta(models_expanded, hmm_meta_expanded) comparison #> $`hmm_meta_expanded without sys_genes` #> # A tibble: 2 × 2 #>   protein.name hmm_meta_expanded #>   <chr>        <lgl>             #> 1 HamA2        TRUE              #> 2 HamB2        TRUE              #>  #> $`sys_genes without hmm_meta_expanded` #> # A tibble: 5 × 2 #>   protein.name sys_genes #>   <chr>        <lgl>     #> 1 GenA         TRUE      #> 2 GenB         TRUE      #> 3 GenC         TRUE      #> 4 GenD         TRUE      #> 5 GenE         TRUE      #>  #> $`hmm_meta_expanded with sys_genes` #> # A tibble: 27 × 3 #>    protein.name hmm_meta_expanded sys_genes #>    <chr>        <lgl>             <lgl>     #>  1 HamA1        TRUE              TRUE      #>  2 HamA         TRUE              TRUE      #>  3 HamB1        TRUE              TRUE      #>  4 HamB         TRUE              TRUE      #>  5 HamC2        TRUE              TRUE      #>  6 HamC         TRUE              TRUE      #>  7 Drt1a        TRUE              TRUE      #>  8 Drt1b        TRUE              TRUE      #>  9 Drt2         TRUE              TRUE      #> 10 Drt3a        TRUE              TRUE      #> # … with 17 more rows genes_without_meta <- comparison[[\"sys_genes without hmm_meta_expanded\"]][[\"protein.name\"]] which_uses(genes_without_meta, models_expanded) #> $GenA #> [1] \"generic_system_A\" \"generic_system_A\" #>  #> $GenB #> [1] \"generic_system_A\" \"generic_system_A\" #>  #> $GenC #> [1] \"generic_system_B\" #>  #> $GenD #> [1] \"generic_system_B\" #>  #> $GenE #> [1] \"generic_system_B\""},{"path":"https://leightonpayne.github.io/padlocdev/articles/validating-data.html","id":"checking-that-system-models-are-valid","dir":"Articles","previous_headings":"Working through an example of a broken database","what":"Checking that system models are valid","title":"Validating padloc-db data","text":"Now ’ve checked information present database (fixed issues), can now check system models ensure actually capable identifying systems given parameters. Use valid_padloc_model() assessing model validity. function provides useful error information fixing model invalid. expanding gene groups. model brex_type_I invalid, required number core genes greater number core genes specifed. Additionaly, gene BrxA specified core_genes optional_genes. wrapper report_padloc_model_validity() provided test validity system models list return output list ?purrr::safely-style sub-lists two components result error. model, valid, result TRUE error NULL. model invalid, result FALSE error ?rlang::rlang_error object describes reason model invalid. return just error messages model list, use why_invalid(). malformed models may fail reasons outside scope current validity checks, resulting cryptic error messages, like seen DRT_type_III. models inspected manually cause error.","code":"models_expanded[[\"brex_type_III\"]] #> $maximum_separation #> [1] 3 #>  #> $minimum_core #> [1] 6 #>  #> $minimum_total #> [1] 6 #>  #> $core_genes #> [1] \"BrxA\"   \"BrxC\"   \"BrxF\"   \"PglXI\"  \"BrxHII\" \"PglZ\"   #>  #> $optional_genes #> [1] \"NA\" #>  #> $prohibited_genes #> [1] \"NA\"  valid_padloc_model(models_expanded[[\"brex_type_III\"]]) #> [1] TRUE models_expanded[[\"brex_type_I\"]] #> $maximum_separation #> [1] 3 #>  #> $minimum_core #> [1] 7 #>  #> $minimum_total #> [1] 6 #>  #> $core_genes #> [1] \"BrxA\" \"BrxB\" \"BrxC\" \"PglX\" \"PglZ\" \"BrxL\" #>  #> $optional_genes #> [1] \"BrxA\" #>  #> $prohibited_genes #> [1] \"BrxE\"  valid_padloc_model(models_expanded[[\"brex_type_I\"]]) #> Error in `valid_padloc_model()`: #> ! Invalid padloc system model: #> ℹ `minimum_core` must be <= the number of `core_genes` #> ✖ `minimum_core` is 7, but number of `core_genes` is 6 #> ℹ `core_genes` should not overlap with `optional_genes`. #> ✖ Overlapping genes include: \"BrxA\" validity_report <- report_padloc_model_validity(models_expanded) validity_report[[\"DRT_class_II\"]] #> $result #> [1] TRUE #>  #> $error #> NULL validity_report[[\"brex_type_I\"]] #> $result #> [1] FALSE #>  #> $error #> <error/rlang_error> #> Error: #> ! Invalid padloc system model: #> ℹ `minimum_core` must be <= the number of `core_genes` #> ✖ `minimum_core` is 7, but number of `core_genes` is 6 #> ℹ `core_genes` should not overlap with `optional_genes`. #> ✖ Overlapping genes include: \"BrxA\" why_invalid(validity_report) #> $brex_type_I #> <error/rlang_error> #> Error: #> ! Invalid padloc system model: #> ℹ `minimum_core` must be <= the number of `core_genes` #> ✖ `minimum_core` is 7, but number of `core_genes` is 6 #> ℹ `core_genes` should not overlap with `optional_genes`. #> ✖ Overlapping genes include: \"BrxA\" #>  #> $DRT_type_I #> <error/rlang_error> #> Error: #> ! Invalid padloc system model: #> ℹ `maximum_separation` must be a whole number of type integer or double. #> ✖ Instead, got character: zero. #> ℹ `minimum_core` must be a whole number of type integer or double. #> ✖ Instead, got character: two. #> ℹ `minimum_total` must be a whole number of type integer or double. #> ✖ Instead, got character: two. #> ℹ `minimum_core` must be <= the number of `core_genes` #> ✖ `minimum_core` is \"two\", but number of `core_genes` is 2 #> ℹ `minimum_total` must be <= the combined number of `core_genes` and #> `optional_genes`. #> ✖ `minimum_total` is \"two\", but `core_genes` + `optional_genes` is 2 #>  #> $DRT_type_III #> <simpleError: the condition has length > 1> #>  #> $generic_system_A #> <error/rlang_error> #> Error: #> ! Invalid padloc system model: #> ℹ `minimum_core` must be <= the number of `core_genes` #> ✖ `minimum_core` is 3, but number of `core_genes` is 2 #> ℹ `minimum_total` must be <= the combined number of `core_genes` and #> `optional_genes`. #> ✖ `minimum_total` is 4, but `core_genes` + `optional_genes` is 3 #> ℹ `core_genes` should not overlap with `optional_genes`. #> ✖ Overlapping genes include: \"GenB\" #> ℹ `core_genes` should not overlap with `prohibited_genes`. #> ✖ Overlapping genes include: \"GenA\" #>  #> $generic_system_B #> <error/rlang_error> #> Error: #> ! Invalid padloc system model: #> ℹ `core_genes` can not contain the special value \"NA\". #> ✖ Got \"GenC\", \"GenD\", and \"NA\". #> ℹ `optional_genes` can not contain the special value \"NA\" if additional genes #> are specified. #> ✖ Got \"GenE\" and \"NA\". validity_report[[\"DRT_type_III\"]] #> $result #> [1] FALSE #>  #> $error #> <simpleError: the condition has length > 1>"},{"path":"https://leightonpayne.github.io/padlocdev/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Leighton Payne. Author, maintainer.","code":""},{"path":"https://leightonpayne.github.io/padlocdev/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Payne L (2023). padlocdev: PADLOC development tools. https://github.com/leightonpayne/padlocdev, https://leightonpayne.github.io/padlocdev/.","code":"@Manual{,   title = {padlocdev: PADLOC development tools},   author = {Leighton Payne},   year = {2023},   note = {https://github.com/leightonpayne/padlocdev, https://leightonpayne.github.io/padlocdev/}, }"},{"path":[]},{"path":"https://leightonpayne.github.io/padlocdev/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"PADLOC development tools","text":"can install development version padlocdev GitHub :","code":"# install.packages(\"devtools\") devtools::install_github(\"leightonpayne/padlocdev\")"},{"path":"https://leightonpayne.github.io/padlocdev/index.html","id":"usage","dir":"","previous_headings":"","what":"Usage","title":"PADLOC development tools","text":"Refer documentation website usage information. Particularly Get started section brief introduction, Articles section helpful vignettes, Reference section detailed function documentation.","code":""},{"path":"https://leightonpayne.github.io/padlocdev/reference/a_vs_b.html","id":null,"dir":"Reference","previous_headings":"","what":"Compare two dataframes / tibbles — a_vs_b","title":"Compare two dataframes / tibbles — a_vs_b","text":"helper function comparing two dataframes / tibbles","code":""},{"path":"https://leightonpayne.github.io/padlocdev/reference/a_vs_b.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compare two dataframes / tibbles — a_vs_b","text":"","code":"a_vs_b(a, b, join_by)"},{"path":"https://leightonpayne.github.io/padlocdev/reference/a_vs_b.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compare two dataframes / tibbles — a_vs_b","text":"first dataframe b second dataframe join_by column common","code":""},{"path":"https://leightonpayne.github.io/padlocdev/reference/a_vs_b.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compare two dataframes / tibbles — a_vs_b","text":"base::list() three base::data.frame()s tibble::tibble()s, one entries '' 'b' vice-versa, one entries '' 'b'","code":""},{"path":"https://leightonpayne.github.io/padlocdev/reference/collapse_hmm_meta.html","id":null,"dir":"Reference","previous_headings":"","what":"Collapse HMM metadata table multi-name assignments — collapse_hmm_meta","title":"Collapse HMM metadata table multi-name assignments — collapse_hmm_meta","text":"Collapse HMM metadata table multi-name assignments.","code":""},{"path":"https://leightonpayne.github.io/padlocdev/reference/collapse_hmm_meta.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Collapse HMM metadata table multi-name assignments — collapse_hmm_meta","text":"","code":"collapse_hmm_meta(hmm_meta_expanded)"},{"path":"https://leightonpayne.github.io/padlocdev/reference/collapse_hmm_meta.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Collapse HMM metadata table multi-name assignments — collapse_hmm_meta","text":"hmm_meta_expanded expanded HMM metadata table (read-read_hmm_meta()) expanded expand_hmm_meta().","code":""},{"path":"https://leightonpayne.github.io/padlocdev/reference/collapse_hmm_meta.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Collapse HMM metadata table multi-name assignments — collapse_hmm_meta","text":"HMM metadata table collasped name assignments.","code":""},{"path":"https://leightonpayne.github.io/padlocdev/reference/collapse_hmm_meta.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Collapse HMM metadata table multi-name assignments — collapse_hmm_meta","text":"","code":"path <- padlocdev_example(\"padloc-db/hmm_meta.txt\") hmm_meta <- read_hmm_meta(path) hmm_meta_expanded <- expand_hmm_meta(hmm_meta) hmm_meta_collapsed <- collapse_hmm_meta(hmm_meta_expanded) hmm_meta_collapsed #> # A tibble: 43 × 15 #>    hmm.acc   hmm.name    hmm.de…¹ prote…² secon…³ author numbe…⁴ lengt…⁵ e.val…⁶ #>    <chr>     <chr>       <chr>    <chr>   <chr>   <chr>    <dbl>   <dbl>   <dbl> #>  1 PDLC00150 HamA1_00001 DUF1837… HamA1|… NA      Payne…      49     310 0.00001 #>  2 PDLC00151 HamA1_00002 DUF1837… HamA1|… NA      Payne…       6     436 0.00001 #>  3 PDLC00174 HamB1_00001 DEAD-bo… HamB1|… NA      Payne…      56    1163 0.00001 #>  4 PDLC00175 HamB1_00002 DEAD-bo… HamB1|… NA      Payne…       5    1000 0.00001 #>  5 PDLC00195 HamA2_00001 DUF1837… HamA2|… NA      Payne…       7     283 0.00001 #>  6 PDLC00196 HamA2_00002 DUF1837… HamA2|… NA      Payne…     144     315 0.00001 #>  7 PDLC00199 HamB2_00001 DEAD-bo… HamB2|… NA      Payne…      17     841 0.00001 #>  8 PDLC00200 HamB2_00002 DEAD-bo… HamB2|… NA      Payne…     134     865 0.00001 #>  9 PDLC00202 HamC2_00001 DUF3223… HamC2|… NA      Payne…      31     245 0.00001 #> 10 PDLC00203 HamC2_00002 DUF3223… HamC2|… NA      Payne…     100      99 0.00001 #> # … with 33 more rows, 6 more variables: hmm.coverage.threshold <dbl>, #> #   target.coverage.threshold <dbl>, system <chr>, literature.ref <chr>, #> #   database.ref <chr>, comments <chr>, and abbreviated variable names #> #   ¹​hmm.description, ²​protein.name, ³​secondary.name, ⁴​number.seq, ⁵​length.hmm, #> #   ⁶​e.value.threshold"},{"path":"https://leightonpayne.github.io/padlocdev/reference/colon-equals.html","id":null,"dir":"Reference","previous_headings":"","what":"Injecting with ⁠!!⁠, ⁠!!!⁠, and glue syntax — :=","title":"Injecting with ⁠!!⁠, ⁠!!!⁠, and glue syntax — :=","text":"Injecting ⁠!!⁠, ⁠!!!⁠, glue syntax","code":""},{"path":"https://leightonpayne.github.io/padlocdev/reference/compare_hmm_files_hmm_meta.html","id":null,"dir":"Reference","previous_headings":"","what":"Compare HMM files against those listed in hmm_meta.txt — compare_hmm_files_hmm_meta","title":"Compare HMM files against those listed in hmm_meta.txt — compare_hmm_files_hmm_meta","text":"Compare HMM files listed hmm_meta.txt.","code":""},{"path":"https://leightonpayne.github.io/padlocdev/reference/compare_hmm_files_hmm_meta.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compare HMM files against those listed in hmm_meta.txt — compare_hmm_files_hmm_meta","text":"","code":"compare_hmm_files_hmm_meta(hmm_list, hmm_meta)"},{"path":"https://leightonpayne.github.io/padlocdev/reference/compare_hmm_files_hmm_meta.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compare HMM files against those listed in hmm_meta.txt — compare_hmm_files_hmm_meta","text":"hmm_list base::list() HMMs (.e. read multi_read_hmm() multi_read_hmm_header()). hmm_meta padloc-db HMM metadata file (.e. read read_hmm_meta()).","code":""},{"path":"https://leightonpayne.github.io/padlocdev/reference/compare_hmm_files_hmm_meta.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compare HMM files against those listed in hmm_meta.txt — compare_hmm_files_hmm_meta","text":"base::list() three tibble::tibble()s.","code":""},{"path":"https://leightonpayne.github.io/padlocdev/reference/compare_sys_files_hmm_meta.html","id":null,"dir":"Reference","previous_headings":"","what":"Compare system model files against the hmm metadata table. — compare_sys_files_hmm_meta","title":"Compare system model files against the hmm metadata table. — compare_sys_files_hmm_meta","text":"Compare system model files listed hmm_meta.txt.","code":""},{"path":"https://leightonpayne.github.io/padlocdev/reference/compare_sys_files_hmm_meta.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compare system model files against the hmm metadata table. — compare_sys_files_hmm_meta","text":"","code":"compare_sys_files_hmm_meta(models_expanded, hmm_meta_expanded)"},{"path":"https://leightonpayne.github.io/padlocdev/reference/compare_sys_files_hmm_meta.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compare system model files against the hmm metadata table. — compare_sys_files_hmm_meta","text":"models_expanded base::list() padloc-db system models (.e. read multi_read_padloc_model()). hmm_meta_expanded padloc-db HMM metadata file (.e. read read_hmm_meta()).","code":""},{"path":"https://leightonpayne.github.io/padlocdev/reference/compare_sys_files_hmm_meta.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compare system model files against the hmm metadata table. — compare_sys_files_hmm_meta","text":"base::list() three tibble::tibble()s.","code":""},{"path":"https://leightonpayne.github.io/padlocdev/reference/compare_sys_files_sys_meta.html","id":null,"dir":"Reference","previous_headings":"","what":"Compare system model files against those listed in sys_meta.txt — compare_sys_files_sys_meta","title":"Compare system model files against those listed in sys_meta.txt — compare_sys_files_sys_meta","text":"Compare system model files listed hmm_meta.txt.","code":""},{"path":"https://leightonpayne.github.io/padlocdev/reference/compare_sys_files_sys_meta.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compare system model files against those listed in sys_meta.txt — compare_sys_files_sys_meta","text":"","code":"compare_sys_files_sys_meta(sys_list, sys_meta)"},{"path":"https://leightonpayne.github.io/padlocdev/reference/compare_sys_files_sys_meta.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compare system model files against those listed in sys_meta.txt — compare_sys_files_sys_meta","text":"sys_list base::list() system models (.e. read multi_read_padloc_model(). sys_meta padloc-db system metadata file (.e. read read_sys_meta()).","code":""},{"path":"https://leightonpayne.github.io/padlocdev/reference/compare_sys_files_sys_meta.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compare system model files against those listed in sys_meta.txt — compare_sys_files_sys_meta","text":"base::list() three tibble::tibble()s.","code":""},{"path":"https://leightonpayne.github.io/padlocdev/reference/compare_sys_meta_sys_groups.html","id":null,"dir":"Reference","previous_headings":"","what":"Compare system model files against those listed in sys_meta.txt — compare_sys_meta_sys_groups","title":"Compare system model files against those listed in sys_meta.txt — compare_sys_meta_sys_groups","text":"Compare system model files listed hmm_meta.txt.","code":""},{"path":"https://leightonpayne.github.io/padlocdev/reference/compare_sys_meta_sys_groups.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compare system model files against those listed in sys_meta.txt — compare_sys_meta_sys_groups","text":"","code":"compare_sys_meta_sys_groups(sys_meta, sys_groups)"},{"path":"https://leightonpayne.github.io/padlocdev/reference/compare_sys_meta_sys_groups.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compare system model files against those listed in sys_meta.txt — compare_sys_meta_sys_groups","text":"sys_meta padloc-db system metadata file (.e. read read_sys_meta()). sys_groups padloc-db system groups metadata file (.e. read read_sys_groups()).","code":""},{"path":"https://leightonpayne.github.io/padlocdev/reference/compare_sys_meta_sys_groups.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compare system model files against those listed in sys_meta.txt — compare_sys_meta_sys_groups","text":"base::list() three tibble::tibble()s.","code":""},{"path":"https://leightonpayne.github.io/padlocdev/reference/expand_gene_groups.html","id":null,"dir":"Reference","previous_headings":"","what":"Expand gene groups — expand_gene_groups","title":"Expand gene groups — expand_gene_groups","text":"Expand secondary gene assignments specific category genes underlying genes.","code":""},{"path":"https://leightonpayne.github.io/padlocdev/reference/expand_gene_groups.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Expand gene groups — expand_gene_groups","text":"","code":"expand_gene_groups(model, gene_type, hmm_meta)"},{"path":"https://leightonpayne.github.io/padlocdev/reference/expand_gene_groups.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Expand gene groups — expand_gene_groups","text":"model padloc model. gene_type category genes expand, .e. one : \"core_genes\", \"optional_genes\", \"prohibited_genes\". hmm_meta padloc-db HMM metadata table.","code":""},{"path":"https://leightonpayne.github.io/padlocdev/reference/expand_gene_groups.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Expand gene groups — expand_gene_groups","text":"base::character() vector containing expanded gene values.","code":""},{"path":"https://leightonpayne.github.io/padlocdev/reference/expand_gene_groups.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Expand gene groups — expand_gene_groups","text":"","code":"# Read data ----------------------------------------------------------------- path <- padlocdev_example(\"padloc-db/sys/DRT_class_I.yaml\") model <- read_padloc_model(path) model #> $maximum_separation #> [1] 0 #>  #> $minimum_core #> [1] 2 #>  #> $minimum_total #> [1] 2 #>  #> $core_genes #> [1] \"Drt_class_I\" #>  #> $optional_genes #> [1] \"NA\" #>  #> $prohibited_genes #> [1] \"Drt_class_II\"  \"Drt_class_III\" #>  path <- padlocdev_example(\"padloc-db/hmm_meta.txt\") # Generate path for example model hmm_meta <- read_hmm_meta(path) hmm_meta #> # A tibble: 43 × 15 #>    hmm.acc   hmm.name    hmm.de…¹ prote…² secon…³ author numbe…⁴ lengt…⁵ e.val…⁶ #>    <chr>     <chr>       <chr>    <chr>   <chr>   <chr>    <dbl>   <dbl>   <dbl> #>  1 PDLC00150 HamA1_00001 DUF1837… HamA1|… NA      Payne…      49     310 0.00001 #>  2 PDLC00151 HamA1_00002 DUF1837… HamA1|… NA      Payne…       6     436 0.00001 #>  3 PDLC00174 HamB1_00001 DEAD-bo… HamB1|… NA      Payne…      56    1163 0.00001 #>  4 PDLC00175 HamB1_00002 DEAD-bo… HamB1|… NA      Payne…       5    1000 0.00001 #>  5 PDLC00195 HamA2_00001 DUF1837… HamA2|… NA      Payne…       7     283 0.00001 #>  6 PDLC00196 HamA2_00002 DUF1837… HamA2|… NA      Payne…     144     315 0.00001 #>  7 PDLC00199 HamB2_00001 DEAD-bo… HamB2|… NA      Payne…      17     841 0.00001 #>  8 PDLC00200 HamB2_00002 DEAD-bo… HamB2|… NA      Payne…     134     865 0.00001 #>  9 PDLC00202 HamC2_00001 DUF3223… HamC2|… NA      Payne…      31     245 0.00001 #> 10 PDLC00203 HamC2_00002 DUF3223… HamC2|… NA      Payne…     100      99 0.00001 #> # … with 33 more rows, 6 more variables: hmm.coverage.threshold <dbl>, #> #   target.coverage.threshold <dbl>, system <chr>, literature.ref <chr>, #> #   database.ref <chr>, comments <chr>, and abbreviated variable names #> #   ¹​hmm.description, ²​protein.name, ³​secondary.name, ⁴​number.seq, ⁵​length.hmm, #> #   ⁶​e.value.threshold # Expand genes -------------------------------------------------------------- # The category \"optional_genes\" only contains the gene group \"Sya_accessory\" model$optional_genes #> [1] \"NA\" # After expanding, \"Sya_accessory\" becomes \"SyaB\" and \"SyaC\" model$optional_genes <- expand_gene_groups(model, \"optional_genes\", hmm_meta) model$optional_genes #> [1] \"NA\""},{"path":"https://leightonpayne.github.io/padlocdev/reference/expand_gene_groups_all.html","id":null,"dir":"Reference","previous_headings":"","what":"Expand all gene groups in a list of padloc models — expand_gene_groups_all","title":"Expand all gene groups in a list of padloc models — expand_gene_groups_all","text":"Expand secondary gene assignments categories genes list padloc models underlying genes.","code":""},{"path":"https://leightonpayne.github.io/padlocdev/reference/expand_gene_groups_all.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Expand all gene groups in a list of padloc models — expand_gene_groups_all","text":"","code":"expand_gene_groups_all(models, hmm_meta)"},{"path":"https://leightonpayne.github.io/padlocdev/reference/expand_gene_groups_all.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Expand all gene groups in a list of padloc models — expand_gene_groups_all","text":"models list padloc models. hmm_meta padloc-db HMM metadata table.","code":""},{"path":"https://leightonpayne.github.io/padlocdev/reference/expand_gene_groups_all.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Expand all gene groups in a list of padloc models — expand_gene_groups_all","text":"base::list() padloc models expanded genes.","code":""},{"path":"https://leightonpayne.github.io/padlocdev/reference/expand_gene_groups_all.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Expand all gene groups in a list of padloc models — expand_gene_groups_all","text":"","code":"model <- multi_read_padloc_model(padlocdev_example(\"padloc-db/sys\")) hmm_meta <- read_hmm_meta(padlocdev_example(\"padloc-db/hmm_meta.txt\"))"},{"path":"https://leightonpayne.github.io/padlocdev/reference/expand_hmm_meta.html","id":null,"dir":"Reference","previous_headings":"","what":"Expand HMM metadata table multi-name assignments — expand_hmm_meta","title":"Expand HMM metadata table multi-name assignments — expand_hmm_meta","text":"Expand HMM metadata table multi-name assignments.","code":""},{"path":"https://leightonpayne.github.io/padlocdev/reference/expand_hmm_meta.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Expand HMM metadata table multi-name assignments — expand_hmm_meta","text":"","code":"expand_hmm_meta(hmm_meta)"},{"path":"https://leightonpayne.github.io/padlocdev/reference/expand_hmm_meta.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Expand HMM metadata table multi-name assignments — expand_hmm_meta","text":"hmm_meta HMM metadata table (read-read_hmm_meta()).","code":""},{"path":"https://leightonpayne.github.io/padlocdev/reference/expand_hmm_meta.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Expand HMM metadata table multi-name assignments — expand_hmm_meta","text":"HMM metadata table expanded name assignments.","code":""},{"path":"https://leightonpayne.github.io/padlocdev/reference/expand_hmm_meta.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Expand HMM metadata table multi-name assignments — expand_hmm_meta","text":"","code":"path <- padlocdev_example(\"padloc-db/hmm_meta.txt\") hmm_meta <- read_hmm_meta(path) hmm_meta_expanded <- expand_hmm_meta(hmm_meta) hmm_meta_expanded #> # A tibble: 59 × 15 #>    hmm.acc   hmm.name    hmm.de…¹ prote…² secon…³ author numbe…⁴ lengt…⁵ e.val…⁶ #>    <chr>     <chr>       <chr>    <chr>   <chr>   <chr>    <dbl>   <dbl>   <dbl> #>  1 PDLC00150 HamA1_00001 DUF1837… HamA1   NA      Payne…      49     310 0.00001 #>  2 PDLC00150 HamA1_00001 DUF1837… HamA    NA      Payne…      49     310 0.00001 #>  3 PDLC00151 HamA1_00002 DUF1837… HamA1   NA      Payne…       6     436 0.00001 #>  4 PDLC00151 HamA1_00002 DUF1837… HamA    NA      Payne…       6     436 0.00001 #>  5 PDLC00174 HamB1_00001 DEAD-bo… HamB1   NA      Payne…      56    1163 0.00001 #>  6 PDLC00174 HamB1_00001 DEAD-bo… HamB    NA      Payne…      56    1163 0.00001 #>  7 PDLC00175 HamB1_00002 DEAD-bo… HamB1   NA      Payne…       5    1000 0.00001 #>  8 PDLC00175 HamB1_00002 DEAD-bo… HamB    NA      Payne…       5    1000 0.00001 #>  9 PDLC00195 HamA2_00001 DUF1837… HamA2   NA      Payne…       7     283 0.00001 #> 10 PDLC00195 HamA2_00001 DUF1837… HamA    NA      Payne…       7     283 0.00001 #> # … with 49 more rows, 6 more variables: hmm.coverage.threshold <dbl>, #> #   target.coverage.threshold <dbl>, system <chr>, literature.ref <chr>, #> #   database.ref <chr>, comments <chr>, and abbreviated variable names #> #   ¹​hmm.description, ²​protein.name, ³​secondary.name, ⁴​number.seq, ⁵​length.hmm, #> #   ⁶​e.value.threshold"},{"path":"https://leightonpayne.github.io/padlocdev/reference/multi_read_hmm.html","id":null,"dir":"Reference","previous_headings":"","what":"Read all HMMs in a directory into a list — multi_read_hmm","title":"Read all HMMs in a directory into a list — multi_read_hmm","text":"Read HMMs directory list","code":""},{"path":"https://leightonpayne.github.io/padlocdev/reference/multi_read_hmm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read all HMMs in a directory into a list — multi_read_hmm","text":"","code":"multi_read_hmm(directory)"},{"path":"https://leightonpayne.github.io/padlocdev/reference/multi_read_hmm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read all HMMs in a directory into a list — multi_read_hmm","text":"directory Path directory containing profile HMMs (*.hmm)","code":""},{"path":"https://leightonpayne.github.io/padlocdev/reference/multi_read_hmm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read all HMMs in a directory into a list — multi_read_hmm","text":"base::list() HMMs.","code":""},{"path":"https://leightonpayne.github.io/padlocdev/reference/multi_read_hmm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Read all HMMs in a directory into a list — multi_read_hmm","text":"","code":"hmms <- multi_read_hmm(padlocdev_example(\"padloc-db/hmm\")) hmms[1] #> $PDLC00150 #> $PDLC00150$header #> $PDLC00150$header$`HMMER3/f` #> [1] \"[3.3 | Nov 2019]\" #>  #> $PDLC00150$header$NAME #> [1] \"HamA1_00001\" #>  #> $PDLC00150$header$LENG #> [1] \"310\" #>  #> $PDLC00150$header$ALPH #> [1] \"amino\" #>  #> $PDLC00150$header$ACC #> [1] \"PDLC00150\" #>  #> $PDLC00150$header$DESC #> [1] \"DUF1837\" #>  #> $PDLC00150$header$MAXL #> integer(0) #>  #> $PDLC00150$header$RF #> [1] \"no\" #>  #> $PDLC00150$header$MM #> [1] \"no\" #>  #> $PDLC00150$header$CONS #> [1] \"yes\" #>  #> $PDLC00150$header$CS #> [1] \"no\" #>  #> $PDLC00150$header$MAP #> [1] \"yes\" #>  #> $PDLC00150$header$DATE #> [1] \"Thu Jan  7 16:34:27 2021\" #>  #> $PDLC00150$header$COM #> integer(0) #>  #> $PDLC00150$header$NSEQ #> [1] \"49\" #>  #> $PDLC00150$header$EFFN #> [1] \"1.187317\" #>  #> $PDLC00150$header$CKSUM #> [1] \"1833952886\" #>  #> $PDLC00150$header$GA #> integer(0) #>  #> $PDLC00150$header$TC #> integer(0) #>  #> $PDLC00150$header$NC #> integer(0) #>  #> $PDLC00150$header$`STATS LOCAL MSV` #> [1] \"-10.8865  0.70101\" #>  #> $PDLC00150$header$`STATS LOCAL VITERBI` #> [1] \"-11.9205  0.70101\" #>  #> $PDLC00150$header$`STATS LOCAL FORWARD` #> [1] \"-5.4252  0.70101\" #>  #>  #> $PDLC00150$model #> $PDLC00150$model$compo #> # A tibble: 1 × 20 #>   A      C     D     E     F     G     H     I     K     L     M     N     P     #>   <chr>  <chr> <chr> <chr> <chr> <chr> <chr> <chr> <chr> <chr> <chr> <chr> <chr> #> 1 2.665… 4.51… 2.85… 2.56… 3.09… 3.11… 3.49… 2.74… 2.50… 2.33… 3.67… 3.01… 3.68… #> # … with 7 more variables: Q <chr>, R <chr>, S <chr>, T <chr>, V <chr>, #> #   W <chr>, Y <chr> #>  #> $PDLC00150$model$match_emissions #> # A tibble: 310 × 26 #>     node A     C     D     E     F     G     H     I     K     L     M     N     #>    <int> <chr> <chr> <chr> <chr> <chr> <chr> <chr> <chr> <chr> <chr> <chr> <chr> #>  1     1 2.50… 4.57… 3.06… 2.54… 3.83… 3.39… 3.67… 3.21… 2.39… 2.87… 2.98… 2.64… #>  2     2 2.59… 4.69… 3.07… 2.51… 3.92… 3.19… 3.64… 3.32… 2.21… 2.95… 3.26… 3.00… #>  3     3 2.36… 4.64… 3.06… 2.43… 3.85… 3.43… 3.65… 2.87… 2.29… 2.89… 3.56… 2.93… #>  4     4 2.67… 4.18… 3.96… 3.39… 1.85… 3.74… 3.92… 2.48… 3.28… 2.20… 3.06… 3.23… #>  5     5 2.65… 5.04… 2.62… 2.22… 4.33… 3.00… 3.63… 3.79… 2.16… 3.32… 2.77… 2.50… #>  6     6 2.50… 4.67… 3.13… 2.58… 3.89… 3.20… 3.71… 3.00… 2.30… 2.82… 3.77… 2.91… #>  7     7 2.60… 5.13… 2.60… 2.17… 4.46… 3.41… 2.79… 3.94… 2.01… 3.42… 4.17… 2.69… #>  8     8 2.63… 4.35… 2.87… 2.28… 4.24… 3.43… 3.62… 3.57… 2.11… 2.88… 4.02… 2.33… #>  9     9 2.63… 4.14… 3.97… 3.39… 3.08… 3.71… 3.11… 2.05… 3.29… 2.31… 3.24… 3.65… #> 10    10 2.67… 4.21… 3.91… 3.16… 3.34… 3.74… 4.05… 1.82… 3.24… 1.90… 3.32… 3.64… #> # … with 300 more rows, and 13 more variables: P <chr>, Q <chr>, R <chr>, #> #   S <chr>, T <chr>, V <chr>, W <chr>, Y <chr>, MAP <chr>, CONS <chr>, #> #   RF <chr>, MM <chr>, CS <chr> #>  #> $PDLC00150$model$insert_emissions #> # A tibble: 311 × 21 #>     node A     C     D     E     F     G     H     I     K     L     M     N     #>    <dbl> <chr> <chr> <chr> <chr> <chr> <chr> <chr> <chr> <chr> <chr> <chr> <chr> #>  1     1 2.68… 4.42… 2.77… 2.73… 3.46… 2.40… 3.72… 3.29… 2.67… 2.69… 4.24… 2.90… #>  2     2 2.68… 4.42… 2.77… 2.73… 3.46… 2.40… 3.72… 3.29… 2.67… 2.69… 4.24… 2.90… #>  3     3 2.68… 4.42… 2.77… 2.73… 3.46… 2.40… 3.72… 3.29… 2.67… 2.69… 4.24… 2.90… #>  4     4 2.68… 4.42… 2.77… 2.73… 3.46… 2.40… 3.72… 3.29… 2.67… 2.69… 4.24… 2.90… #>  5     5 2.68… 4.42… 2.77… 2.73… 3.46… 2.40… 3.72… 3.29… 2.67… 2.69… 4.24… 2.90… #>  6     6 2.68… 4.42… 2.77… 2.73… 3.46… 2.40… 3.72… 3.29… 2.67… 2.69… 4.24… 2.90… #>  7     7 2.68… 4.42… 2.77… 2.73… 3.46… 2.40… 3.72… 3.29… 2.67… 2.69… 4.24… 2.90… #>  8     8 2.68… 4.42… 2.77… 2.73… 3.46… 2.40… 3.72… 3.29… 2.67… 2.69… 4.24… 2.90… #>  9     9 2.68… 4.42… 2.77… 2.73… 3.46… 2.40… 3.72… 3.29… 2.67… 2.69… 4.24… 2.90… #> 10    10 2.68… 4.42… 2.77… 2.73… 3.46… 2.40… 3.72… 3.29… 2.67… 2.69… 4.24… 2.90… #> # … with 301 more rows, and 8 more variables: P <chr>, Q <chr>, R <chr>, #> #   S <chr>, T <chr>, V <chr>, W <chr>, Y <chr> #>  #> $PDLC00150$model$state_transitions #> # A tibble: 311 × 8 #>     node m_m     m_i     m_d     i_m     i_i     d_m     d_d     #>    <dbl> <chr>   <chr>   <chr>   <chr>   <chr>   <chr>   <chr>   #>  1     1 0.02845 3.96966 4.69201 0.61958 0.77255 0.70163 0.68473 #>  2     2 0.02665 4.03404 4.75639 0.61958 0.77255 0.72249 0.66464 #>  3     3 0.02615 4.05282 4.77517 0.61958 0.77255 0.69904 0.68729 #>  4     4 0.02555 4.07571 4.79805 0.61958 0.77255 0.41003 1.08954 #>  5     5 0.02126 4.25756 4.97991 0.61958 0.77255 0.52516 0.89517 #>  6     6 0.02126 4.25756 4.97991 0.61958 0.77255 0.52516 0.89517 #>  7     7 0.02126 4.25756 4.97991 0.61958 0.77255 0.52516 0.89517 #>  8     8 0.02126 4.25756 4.97991 0.61958 0.77255 0.52516 0.89517 #>  9     9 0.02126 4.25756 4.97991 0.61958 0.77255 0.52516 0.89517 #> 10    10 0.02126 4.25756 4.97991 0.61958 0.77255 0.52516 0.89517 #> # … with 301 more rows #>  #>  #>"},{"path":"https://leightonpayne.github.io/padlocdev/reference/multi_read_hmm_header.html","id":null,"dir":"Reference","previous_headings":"","what":"Read the headers from a profile HMM into a list. — multi_read_hmm_header","title":"Read the headers from a profile HMM into a list. — multi_read_hmm_header","text":"Read headers profile HMM list.","code":""},{"path":"https://leightonpayne.github.io/padlocdev/reference/multi_read_hmm_header.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read the headers from a profile HMM into a list. — multi_read_hmm_header","text":"","code":"multi_read_hmm_header(directory)"},{"path":"https://leightonpayne.github.io/padlocdev/reference/multi_read_hmm_header.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read the headers from a profile HMM into a list. — multi_read_hmm_header","text":"directory Path directory containing profile HMMs (*.hmm)","code":""},{"path":"https://leightonpayne.github.io/padlocdev/reference/multi_read_hmm_header.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read the headers from a profile HMM into a list. — multi_read_hmm_header","text":"base::list().","code":""},{"path":"https://leightonpayne.github.io/padlocdev/reference/multi_read_hmm_header.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Read the headers from a profile HMM into a list. — multi_read_hmm_header","text":"","code":"hmms <- multi_read_hmm_header(padlocdev_example(\"padloc-db/hmm\")) hmms[1] #> $PDLC00150 #> $PDLC00150$header #> $PDLC00150$header$`HMMER3/f` #> [1] \"[3.3 | Nov 2019]\" #>  #> $PDLC00150$header$NAME #> [1] \"HamA1_00001\" #>  #> $PDLC00150$header$LENG #> [1] \"310\" #>  #> $PDLC00150$header$ALPH #> [1] \"amino\" #>  #> $PDLC00150$header$ACC #> [1] \"PDLC00150\" #>  #> $PDLC00150$header$DESC #> [1] \"DUF1837\" #>  #> $PDLC00150$header$MAXL #> integer(0) #>  #> $PDLC00150$header$RF #> [1] \"no\" #>  #> $PDLC00150$header$MM #> [1] \"no\" #>  #> $PDLC00150$header$CONS #> [1] \"yes\" #>  #> $PDLC00150$header$CS #> [1] \"no\" #>  #> $PDLC00150$header$MAP #> [1] \"yes\" #>  #> $PDLC00150$header$DATE #> [1] \"Thu Jan  7 16:34:27 2021\" #>  #> $PDLC00150$header$COM #> integer(0) #>  #> $PDLC00150$header$NSEQ #> [1] \"49\" #>  #> $PDLC00150$header$EFFN #> [1] \"1.187317\" #>  #> $PDLC00150$header$CKSUM #> [1] \"1833952886\" #>  #> $PDLC00150$header$GA #> integer(0) #>  #> $PDLC00150$header$TC #> integer(0) #>  #> $PDLC00150$header$NC #> integer(0) #>  #> $PDLC00150$header$`STATS LOCAL MSV` #> [1] \"-10.8865  0.70101\" #>  #> $PDLC00150$header$`STATS LOCAL VITERBI` #> [1] \"-11.9205  0.70101\" #>  #> $PDLC00150$header$`STATS LOCAL FORWARD` #> [1] \"-5.4252  0.70101\" #>  #>  #>"},{"path":"https://leightonpayne.github.io/padlocdev/reference/multi_read_padloc_model.html","id":null,"dir":"Reference","previous_headings":"","what":"Read the filename, NAME and ACC identifiers from a profile HMM into a list. — multi_read_padloc_model","title":"Read the filename, NAME and ACC identifiers from a profile HMM into a list. — multi_read_padloc_model","text":"Read filename, NAME ACC identifiers profile HMM list.","code":""},{"path":"https://leightonpayne.github.io/padlocdev/reference/multi_read_padloc_model.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read the filename, NAME and ACC identifiers from a profile HMM into a list. — multi_read_padloc_model","text":"","code":"multi_read_padloc_model(directory)"},{"path":"https://leightonpayne.github.io/padlocdev/reference/multi_read_padloc_model.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read the filename, NAME and ACC identifiers from a profile HMM into a list. — multi_read_padloc_model","text":"directory Path directory containing profile HMMs (*.hmm)","code":""},{"path":"https://leightonpayne.github.io/padlocdev/reference/multi_read_padloc_model.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read the filename, NAME and ACC identifiers from a profile HMM into a list. — multi_read_padloc_model","text":"base::list().","code":""},{"path":"https://leightonpayne.github.io/padlocdev/reference/multi_read_padloc_model.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Read the filename, NAME and ACC identifiers from a profile HMM into a list. — multi_read_padloc_model","text":"","code":"multi_read_hmm_header(padlocdev_example(\"padloc-db/sys\")) #> named list()"},{"path":"https://leightonpayne.github.io/padlocdev/reference/padloc_model.html","id":null,"dir":"Reference","previous_headings":"","what":"Padloc model — padloc_model","title":"Padloc model — padloc_model","text":"list parameters make padloc model.","code":""},{"path":"https://leightonpayne.github.io/padlocdev/reference/padloc_model.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Padloc model — padloc_model","text":"","code":"padloc_model(   maximum_separation,   minimum_core,   minimum_total,   core_genes,   optional_genes,   prohibited_genes )"},{"path":"https://leightonpayne.github.io/padlocdev/reference/padloc_model.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Padloc model — padloc_model","text":"maximum_separation base::integer(), representing maximum number unrelated genes can seperate genes system. minimum_core base::integer(), representing minimum number core genes must identified complete system. minimum_total base::integer(), representing minimum number total genes must identified complete system. core_genes base::character(), listing names core genes contribute system completeness. optional_genes base::character(), listing names optional genes contribute system completeness. prohibited_genes base::character(), listing names prohibited genes identified proximity system.","code":""},{"path":"https://leightonpayne.github.io/padlocdev/reference/padloc_model.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Padloc model — padloc_model","text":"base::list().","code":""},{"path":"https://leightonpayne.github.io/padlocdev/reference/padloc_model.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Padloc model — padloc_model","text":"","code":"model <- padloc_model(   maximum_separation = 3,   minimum_core = 2,   minimum_total = 3,   core_genes = c(\"GenA\", \"GenB\"),   optional_genes = c(\"GenC\", \"GenD\"),   prohibited_genes = \"NA\" )"},{"path":"https://leightonpayne.github.io/padlocdev/reference/padlocdev-package.html","id":null,"dir":"Reference","previous_headings":"","what":"padlocdev: PADLOC development tools — padlocdev-package","title":"padlocdev: PADLOC development tools — padlocdev-package","text":"PADLOC development tools.","code":""},{"path":[]},{"path":"https://leightonpayne.github.io/padlocdev/reference/padlocdev-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"padlocdev: PADLOC development tools — padlocdev-package","text":"Maintainer: Leighton Payne leighton.payne@postgrad.otago.ac.nz (ORCID)","code":""},{"path":"https://leightonpayne.github.io/padlocdev/reference/padlocdev_example.html","id":null,"dir":"Reference","previous_headings":"","what":"Get path to padlocdev example — padlocdev_example","title":"Get path to padlocdev example — padlocdev_example","text":"padlocdev comes bundled number sample files inst/extdata directory. function make easy access.","code":""},{"path":"https://leightonpayne.github.io/padlocdev/reference/padlocdev_example.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get path to padlocdev example — padlocdev_example","text":"","code":"padlocdev_example(file = NULL)"},{"path":"https://leightonpayne.github.io/padlocdev/reference/padlocdev_example.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get path to padlocdev example — padlocdev_example","text":"file Name file. NULL, example files listed.","code":""},{"path":"https://leightonpayne.github.io/padlocdev/reference/padlocdev_example.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get path to padlocdev example — padlocdev_example","text":"base::character().","code":""},{"path":"https://leightonpayne.github.io/padlocdev/reference/padlocdev_example.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get path to padlocdev example — padlocdev_example","text":"","code":"padlocdev_example() #>   [1] \"padloc-db\"                                  #>   [2] \"padloc-db/hmm\"                              #>   [3] \"padloc-db/hmm/PDLC00150.hmm\"                #>   [4] \"padloc-db/hmm/PDLC00151.hmm\"                #>   [5] \"padloc-db/hmm/PDLC00174.hmm\"                #>   [6] \"padloc-db/hmm/PDLC00175.hmm\"                #>   [7] \"padloc-db/hmm/PDLC00195.hmm\"                #>   [8] \"padloc-db/hmm/PDLC00196.hmm\"                #>   [9] \"padloc-db/hmm/PDLC00199.hmm\"                #>  [10] \"padloc-db/hmm/PDLC00200.hmm\"                #>  [11] \"padloc-db/hmm/PDLC00202.hmm\"                #>  [12] \"padloc-db/hmm/PDLC00203.hmm\"                #>  [13] \"padloc-db/hmm/PDLC02171.hmm\"                #>  [14] \"padloc-db/hmm/PDLC02172.hmm\"                #>  [15] \"padloc-db/hmm/PDLC02173.hmm\"                #>  [16] \"padloc-db/hmm/PDLC02174.hmm\"                #>  [17] \"padloc-db/hmm/PDLC02175.hmm\"                #>  [18] \"padloc-db/hmm/PDLC02176.hmm\"                #>  [19] \"padloc-db/hmm/PDLC02177.hmm\"                #>  [20] \"padloc-db/hmm/PDLC02178.hmm\"                #>  [21] \"padloc-db/hmm/PDLC02181.hmm\"                #>  [22] \"padloc-db/hmm/PDLC02182.hmm\"                #>  [23] \"padloc-db/hmm/PDLC02437.hmm\"                #>  [24] \"padloc-db/hmm/PDLC02438.hmm\"                #>  [25] \"padloc-db/hmm/PDLC02459.hmm\"                #>  [26] \"padloc-db/hmm/PDLC02460.hmm\"                #>  [27] \"padloc-db/hmm/PDLC02471.hmm\"                #>  [28] \"padloc-db/hmm/PDLC02472.hmm\"                #>  [29] \"padloc-db/hmm/PDLC02494.hmm\"                #>  [30] \"padloc-db/hmm/PDLC02495.hmm\"                #>  [31] \"padloc-db/hmm/PDLC02496.hmm\"                #>  [32] \"padloc-db/hmm/PDLC02497.hmm\"                #>  [33] \"padloc-db/hmm/PDLC02500.hmm\"                #>  [34] \"padloc-db/hmm/PDLC02501.hmm\"                #>  [35] \"padloc-db/hmm/PDLC02504.hmm\"                #>  [36] \"padloc-db/hmm/PDLC02505.hmm\"                #>  [37] \"padloc-db/hmm/PDLC02506.hmm\"                #>  [38] \"padloc-db/hmm/PDLC02510.hmm\"                #>  [39] \"padloc-db/hmm/PDLC02511.hmm\"                #>  [40] \"padloc-db/hmm/PDLC02512.hmm\"                #>  [41] \"padloc-db/hmm/PDLC02513.hmm\"                #>  [42] \"padloc-db/hmm/PDLC02515.hmm\"                #>  [43] \"padloc-db/hmm/PDLC02516.hmm\"                #>  [44] \"padloc-db/hmm/PDLC02541.hmm\"                #>  [45] \"padloc-db/hmm/PDLC02542.hmm\"                #>  [46] \"padloc-db/hmm_meta.txt\"                     #>  [47] \"padloc-db/sys\"                              #>  [48] \"padloc-db/sys/DRT_class_I.yaml\"             #>  [49] \"padloc-db/sys/DRT_class_II.yaml\"            #>  [50] \"padloc-db/sys/DRT_class_III.yaml\"           #>  [51] \"padloc-db/sys/DRT_other.yaml\"               #>  [52] \"padloc-db/sys/DRT_type_I.yaml\"              #>  [53] \"padloc-db/sys/DRT_type_II.yaml\"             #>  [54] \"padloc-db/sys/DRT_type_III.yaml\"            #>  [55] \"padloc-db/sys/DRT_type_IV.yaml\"             #>  [56] \"padloc-db/sys/DRT_type_V.yaml\"              #>  [57] \"padloc-db/sys/brex_other.yaml\"              #>  [58] \"padloc-db/sys/brex_type_I.yaml\"             #>  [59] \"padloc-db/sys/brex_type_II.yaml\"            #>  [60] \"padloc-db/sys/brex_type_III.yaml\"           #>  [61] \"padloc-db/sys/brex_type_IV.yaml\"            #>  [62] \"padloc-db/sys/brex_type_V.yaml\"             #>  [63] \"padloc-db/sys/brex_type_VI.yaml\"            #>  [64] \"padloc-db/sys/hachiman_other.yaml\"          #>  [65] \"padloc-db/sys/hachiman_type_I.yaml\"         #>  [66] \"padloc-db/sys/hachiman_type_II.yaml\"        #>  [67] \"padloc-db/sys_groups.txt\"                   #>  [68] \"padloc-db/sys_meta.txt\"                     #>  [69] \"padloc-db-broken\"                           #>  [70] \"padloc-db-broken/hmm\"                       #>  [71] \"padloc-db-broken/hmm/PDLC00150.hmm\"         #>  [72] \"padloc-db-broken/hmm/PDLC00151.hmm\"         #>  [73] \"padloc-db-broken/hmm/PDLC00174.hmm\"         #>  [74] \"padloc-db-broken/hmm/PDLC00175.hmm\"         #>  [75] \"padloc-db-broken/hmm/PDLC00195.hmm\"         #>  [76] \"padloc-db-broken/hmm/PDLC00196.hmm\"         #>  [77] \"padloc-db-broken/hmm/PDLC00199.hmm\"         #>  [78] \"padloc-db-broken/hmm/PDLC00200.hmm\"         #>  [79] \"padloc-db-broken/hmm/PDLC00202.hmm\"         #>  [80] \"padloc-db-broken/hmm/PDLC00203.hmm\"         #>  [81] \"padloc-db-broken/hmm/PDLC02171.hmm\"         #>  [82] \"padloc-db-broken/hmm/PDLC02172.hmm\"         #>  [83] \"padloc-db-broken/hmm/PDLC02173.hmm\"         #>  [84] \"padloc-db-broken/hmm/PDLC02174.hmm\"         #>  [85] \"padloc-db-broken/hmm/PDLC02175.hmm\"         #>  [86] \"padloc-db-broken/hmm/PDLC02176.hmm\"         #>  [87] \"padloc-db-broken/hmm/PDLC02177.hmm\"         #>  [88] \"padloc-db-broken/hmm/PDLC02178.hmm\"         #>  [89] \"padloc-db-broken/hmm/PDLC02181.hmm\"         #>  [90] \"padloc-db-broken/hmm/PDLC02182.hmm\"         #>  [91] \"padloc-db-broken/hmm/PDLC02438.hmm\"         #>  [92] \"padloc-db-broken/hmm/PDLC02459.hmm\"         #>  [93] \"padloc-db-broken/hmm/PDLC02460.hmm\"         #>  [94] \"padloc-db-broken/hmm/PDLC02471.hmm\"         #>  [95] \"padloc-db-broken/hmm/PDLC02472.hmm\"         #>  [96] \"padloc-db-broken/hmm/PDLC02494.hmm\"         #>  [97] \"padloc-db-broken/hmm/PDLC02496.hmm\"         #>  [98] \"padloc-db-broken/hmm/PDLC02497.hmm\"         #>  [99] \"padloc-db-broken/hmm/PDLC02500.hmm\"         #> [100] \"padloc-db-broken/hmm/PDLC02501.hmm\"         #> [101] \"padloc-db-broken/hmm/PDLC02504.hmm\"         #> [102] \"padloc-db-broken/hmm/PDLC02505.hmm\"         #> [103] \"padloc-db-broken/hmm/PDLC02506.hmm\"         #> [104] \"padloc-db-broken/hmm/PDLC02512.hmm\"         #> [105] \"padloc-db-broken/hmm/PDLC02513.hmm\"         #> [106] \"padloc-db-broken/hmm/PDLC02515.hmm\"         #> [107] \"padloc-db-broken/hmm/PDLC02516.hmm\"         #> [108] \"padloc-db-broken/hmm/PDLC02541.hmm\"         #> [109] \"padloc-db-broken/hmm/PDLC02542.hmm\"         #> [110] \"padloc-db-broken/hmm/PDLC03000.hmm\"         #> [111] \"padloc-db-broken/hmm/PDLC04000.hmm\"         #> [112] \"padloc-db-broken/hmm/PDLC05000.hmm\"         #> [113] \"padloc-db-broken/hmm_meta.txt\"              #> [114] \"padloc-db-broken/sys\"                       #> [115] \"padloc-db-broken/sys/DRT_class_I.yaml\"      #> [116] \"padloc-db-broken/sys/DRT_class_II.yaml\"     #> [117] \"padloc-db-broken/sys/DRT_class_III.yaml\"    #> [118] \"padloc-db-broken/sys/DRT_other.yaml\"        #> [119] \"padloc-db-broken/sys/DRT_type_I.yaml\"       #> [120] \"padloc-db-broken/sys/DRT_type_III.yaml\"     #> [121] \"padloc-db-broken/sys/DRT_type_IV.yaml\"      #> [122] \"padloc-db-broken/sys/DRT_type_V.yaml\"       #> [123] \"padloc-db-broken/sys/brex_other.yaml\"       #> [124] \"padloc-db-broken/sys/brex_type_I.yaml\"      #> [125] \"padloc-db-broken/sys/brex_type_III.yaml\"    #> [126] \"padloc-db-broken/sys/brex_type_IV.yaml\"     #> [127] \"padloc-db-broken/sys/brex_type_V.yaml\"      #> [128] \"padloc-db-broken/sys/brex_type_VI.yaml\"     #> [129] \"padloc-db-broken/sys/generic_system_A.yaml\" #> [130] \"padloc-db-broken/sys/generic_system_B.yaml\" #> [131] \"padloc-db-broken/sys/hachiman_other.yaml\"   #> [132] \"padloc-db-broken/sys/hachiman_type_I.yaml\"  #> [133] \"padloc-db-broken/sys_groups.txt\"            #> [134] \"padloc-db-broken/sys_meta.txt\"              padlocdev_example(\"padloc-db/hmm/PDLC00150.hmm\") #> /home/runner/work/_temp/Library/padlocdev/extdata/padloc-db/hmm/PDLC00150.hmm"},{"path":"https://leightonpayne.github.io/padlocdev/reference/pipe.html","id":null,"dir":"Reference","previous_headings":"","what":"Pipe operator — %>%","title":"Pipe operator — %>%","text":"See magrittr::%>% details.","code":""},{"path":"https://leightonpayne.github.io/padlocdev/reference/pipe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pipe operator — %>%","text":"","code":"lhs %>% rhs"},{"path":"https://leightonpayne.github.io/padlocdev/reference/pipe.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pipe operator — %>%","text":"lhs value magrittr placeholder. rhs function call using magrittr semantics.","code":""},{"path":"https://leightonpayne.github.io/padlocdev/reference/pipe.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pipe operator — %>%","text":"result calling rhs(lhs).","code":""},{"path":"https://leightonpayne.github.io/padlocdev/reference/pull_genes.html","id":null,"dir":"Reference","previous_headings":"","what":"Pull the genes from a list of system models — pull_genes","title":"Pull the genes from a list of system models — pull_genes","text":"Pull genes list system models.","code":""},{"path":"https://leightonpayne.github.io/padlocdev/reference/pull_genes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pull the genes from a list of system models — pull_genes","text":"","code":"pull_genes(sys_list)"},{"path":"https://leightonpayne.github.io/padlocdev/reference/pull_genes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pull the genes from a list of system models — pull_genes","text":"sys_list base::list() system models (.e. read multi_read_padloc_model().","code":""},{"path":"https://leightonpayne.github.io/padlocdev/reference/pull_genes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pull the genes from a list of system models — pull_genes","text":"base::character() vector.","code":""},{"path":"https://leightonpayne.github.io/padlocdev/reference/read_hmm.html","id":null,"dir":"Reference","previous_headings":"","what":"Read an HMMER3 formatted profile HMM — read_hmm","title":"Read an HMMER3 formatted profile HMM — read_hmm","text":"Read HMMER3 formatted profile HMM","code":""},{"path":"https://leightonpayne.github.io/padlocdev/reference/read_hmm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read an HMMER3 formatted profile HMM — read_hmm","text":"","code":"read_hmm(file)"},{"path":"https://leightonpayne.github.io/padlocdev/reference/read_hmm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read an HMMER3 formatted profile HMM — read_hmm","text":"file Path profile HMM generated HMMER3","code":""},{"path":"https://leightonpayne.github.io/padlocdev/reference/read_hmm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read an HMMER3 formatted profile HMM — read_hmm","text":"base::list().","code":""},{"path":"https://leightonpayne.github.io/padlocdev/reference/read_hmm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Read an HMMER3 formatted profile HMM — read_hmm","text":"","code":"read_hmm(padlocdev_example(\"padloc-db/hmm/PDLC00150.hmm\")) #> $header #> $header$`HMMER3/f` #> [1] \"[3.3 | Nov 2019]\" #>  #> $header$NAME #> [1] \"HamA1_00001\" #>  #> $header$LENG #> [1] \"310\" #>  #> $header$ALPH #> [1] \"amino\" #>  #> $header$ACC #> [1] \"PDLC00150\" #>  #> $header$DESC #> [1] \"DUF1837\" #>  #> $header$MAXL #> integer(0) #>  #> $header$RF #> [1] \"no\" #>  #> $header$MM #> [1] \"no\" #>  #> $header$CONS #> [1] \"yes\" #>  #> $header$CS #> [1] \"no\" #>  #> $header$MAP #> [1] \"yes\" #>  #> $header$DATE #> [1] \"Thu Jan  7 16:34:27 2021\" #>  #> $header$COM #> integer(0) #>  #> $header$NSEQ #> [1] \"49\" #>  #> $header$EFFN #> [1] \"1.187317\" #>  #> $header$CKSUM #> [1] \"1833952886\" #>  #> $header$GA #> integer(0) #>  #> $header$TC #> integer(0) #>  #> $header$NC #> integer(0) #>  #> $header$`STATS LOCAL MSV` #> [1] \"-10.8865  0.70101\" #>  #> $header$`STATS LOCAL VITERBI` #> [1] \"-11.9205  0.70101\" #>  #> $header$`STATS LOCAL FORWARD` #> [1] \"-5.4252  0.70101\" #>  #>  #> $model #> $model$compo #> # A tibble: 1 × 20 #>   A      C     D     E     F     G     H     I     K     L     M     N     P     #>   <chr>  <chr> <chr> <chr> <chr> <chr> <chr> <chr> <chr> <chr> <chr> <chr> <chr> #> 1 2.665… 4.51… 2.85… 2.56… 3.09… 3.11… 3.49… 2.74… 2.50… 2.33… 3.67… 3.01… 3.68… #> # … with 7 more variables: Q <chr>, R <chr>, S <chr>, T <chr>, V <chr>, #> #   W <chr>, Y <chr> #>  #> $model$match_emissions #> # A tibble: 310 × 26 #>     node A     C     D     E     F     G     H     I     K     L     M     N     #>    <int> <chr> <chr> <chr> <chr> <chr> <chr> <chr> <chr> <chr> <chr> <chr> <chr> #>  1     1 2.50… 4.57… 3.06… 2.54… 3.83… 3.39… 3.67… 3.21… 2.39… 2.87… 2.98… 2.64… #>  2     2 2.59… 4.69… 3.07… 2.51… 3.92… 3.19… 3.64… 3.32… 2.21… 2.95… 3.26… 3.00… #>  3     3 2.36… 4.64… 3.06… 2.43… 3.85… 3.43… 3.65… 2.87… 2.29… 2.89… 3.56… 2.93… #>  4     4 2.67… 4.18… 3.96… 3.39… 1.85… 3.74… 3.92… 2.48… 3.28… 2.20… 3.06… 3.23… #>  5     5 2.65… 5.04… 2.62… 2.22… 4.33… 3.00… 3.63… 3.79… 2.16… 3.32… 2.77… 2.50… #>  6     6 2.50… 4.67… 3.13… 2.58… 3.89… 3.20… 3.71… 3.00… 2.30… 2.82… 3.77… 2.91… #>  7     7 2.60… 5.13… 2.60… 2.17… 4.46… 3.41… 2.79… 3.94… 2.01… 3.42… 4.17… 2.69… #>  8     8 2.63… 4.35… 2.87… 2.28… 4.24… 3.43… 3.62… 3.57… 2.11… 2.88… 4.02… 2.33… #>  9     9 2.63… 4.14… 3.97… 3.39… 3.08… 3.71… 3.11… 2.05… 3.29… 2.31… 3.24… 3.65… #> 10    10 2.67… 4.21… 3.91… 3.16… 3.34… 3.74… 4.05… 1.82… 3.24… 1.90… 3.32… 3.64… #> # … with 300 more rows, and 13 more variables: P <chr>, Q <chr>, R <chr>, #> #   S <chr>, T <chr>, V <chr>, W <chr>, Y <chr>, MAP <chr>, CONS <chr>, #> #   RF <chr>, MM <chr>, CS <chr> #>  #> $model$insert_emissions #> # A tibble: 311 × 21 #>     node A     C     D     E     F     G     H     I     K     L     M     N     #>    <dbl> <chr> <chr> <chr> <chr> <chr> <chr> <chr> <chr> <chr> <chr> <chr> <chr> #>  1     1 2.68… 4.42… 2.77… 2.73… 3.46… 2.40… 3.72… 3.29… 2.67… 2.69… 4.24… 2.90… #>  2     2 2.68… 4.42… 2.77… 2.73… 3.46… 2.40… 3.72… 3.29… 2.67… 2.69… 4.24… 2.90… #>  3     3 2.68… 4.42… 2.77… 2.73… 3.46… 2.40… 3.72… 3.29… 2.67… 2.69… 4.24… 2.90… #>  4     4 2.68… 4.42… 2.77… 2.73… 3.46… 2.40… 3.72… 3.29… 2.67… 2.69… 4.24… 2.90… #>  5     5 2.68… 4.42… 2.77… 2.73… 3.46… 2.40… 3.72… 3.29… 2.67… 2.69… 4.24… 2.90… #>  6     6 2.68… 4.42… 2.77… 2.73… 3.46… 2.40… 3.72… 3.29… 2.67… 2.69… 4.24… 2.90… #>  7     7 2.68… 4.42… 2.77… 2.73… 3.46… 2.40… 3.72… 3.29… 2.67… 2.69… 4.24… 2.90… #>  8     8 2.68… 4.42… 2.77… 2.73… 3.46… 2.40… 3.72… 3.29… 2.67… 2.69… 4.24… 2.90… #>  9     9 2.68… 4.42… 2.77… 2.73… 3.46… 2.40… 3.72… 3.29… 2.67… 2.69… 4.24… 2.90… #> 10    10 2.68… 4.42… 2.77… 2.73… 3.46… 2.40… 3.72… 3.29… 2.67… 2.69… 4.24… 2.90… #> # … with 301 more rows, and 8 more variables: P <chr>, Q <chr>, R <chr>, #> #   S <chr>, T <chr>, V <chr>, W <chr>, Y <chr> #>  #> $model$state_transitions #> # A tibble: 311 × 8 #>     node m_m     m_i     m_d     i_m     i_i     d_m     d_d     #>    <dbl> <chr>   <chr>   <chr>   <chr>   <chr>   <chr>   <chr>   #>  1     1 0.02845 3.96966 4.69201 0.61958 0.77255 0.70163 0.68473 #>  2     2 0.02665 4.03404 4.75639 0.61958 0.77255 0.72249 0.66464 #>  3     3 0.02615 4.05282 4.77517 0.61958 0.77255 0.69904 0.68729 #>  4     4 0.02555 4.07571 4.79805 0.61958 0.77255 0.41003 1.08954 #>  5     5 0.02126 4.25756 4.97991 0.61958 0.77255 0.52516 0.89517 #>  6     6 0.02126 4.25756 4.97991 0.61958 0.77255 0.52516 0.89517 #>  7     7 0.02126 4.25756 4.97991 0.61958 0.77255 0.52516 0.89517 #>  8     8 0.02126 4.25756 4.97991 0.61958 0.77255 0.52516 0.89517 #>  9     9 0.02126 4.25756 4.97991 0.61958 0.77255 0.52516 0.89517 #> 10    10 0.02126 4.25756 4.97991 0.61958 0.77255 0.52516 0.89517 #> # … with 301 more rows #>  #>"},{"path":"https://leightonpayne.github.io/padlocdev/reference/read_hmm_header.html","id":null,"dir":"Reference","previous_headings":"","what":"Read the header section from a profile HMM into a list. — read_hmm_header","title":"Read the header section from a profile HMM into a list. — read_hmm_header","text":"Read header section profile HMM list.","code":""},{"path":"https://leightonpayne.github.io/padlocdev/reference/read_hmm_header.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read the header section from a profile HMM into a list. — read_hmm_header","text":"","code":"read_hmm_header(file)"},{"path":"https://leightonpayne.github.io/padlocdev/reference/read_hmm_header.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read the header section from a profile HMM into a list. — read_hmm_header","text":"file Path profile HMM (*.hmm)","code":""},{"path":"https://leightonpayne.github.io/padlocdev/reference/read_hmm_header.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read the header section from a profile HMM into a list. — read_hmm_header","text":"base::list().","code":""},{"path":"https://leightonpayne.github.io/padlocdev/reference/read_hmm_header.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Read the header section from a profile HMM into a list. — read_hmm_header","text":"","code":"read_hmm_header(padlocdev_example(\"padloc-db/hmm/PDLC00150.hmm\")) #> $header #> $header$`HMMER3/f` #> [1] \"[3.3 | Nov 2019]\" #>  #> $header$NAME #> [1] \"HamA1_00001\" #>  #> $header$LENG #> [1] \"310\" #>  #> $header$ALPH #> [1] \"amino\" #>  #> $header$ACC #> [1] \"PDLC00150\" #>  #> $header$DESC #> [1] \"DUF1837\" #>  #> $header$MAXL #> integer(0) #>  #> $header$RF #> [1] \"no\" #>  #> $header$MM #> [1] \"no\" #>  #> $header$CONS #> [1] \"yes\" #>  #> $header$CS #> [1] \"no\" #>  #> $header$MAP #> [1] \"yes\" #>  #> $header$DATE #> [1] \"Thu Jan  7 16:34:27 2021\" #>  #> $header$COM #> integer(0) #>  #> $header$NSEQ #> [1] \"49\" #>  #> $header$EFFN #> [1] \"1.187317\" #>  #> $header$CKSUM #> [1] \"1833952886\" #>  #> $header$GA #> integer(0) #>  #> $header$TC #> integer(0) #>  #> $header$NC #> integer(0) #>  #> $header$`STATS LOCAL MSV` #> [1] \"-10.8865  0.70101\" #>  #> $header$`STATS LOCAL VITERBI` #> [1] \"-11.9205  0.70101\" #>  #> $header$`STATS LOCAL FORWARD` #> [1] \"-5.4252  0.70101\" #>  #>"},{"path":"https://leightonpayne.github.io/padlocdev/reference/read_hmm_meta.html","id":null,"dir":"Reference","previous_headings":"","what":"Read a padloc-db hmm_meta.txt file. — read_hmm_meta","title":"Read a padloc-db hmm_meta.txt file. — read_hmm_meta","text":"Read padloc-db hmm_meta.txt file.","code":""},{"path":"https://leightonpayne.github.io/padlocdev/reference/read_hmm_meta.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read a padloc-db hmm_meta.txt file. — read_hmm_meta","text":"","code":"read_hmm_meta(file)"},{"path":"https://leightonpayne.github.io/padlocdev/reference/read_hmm_meta.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read a padloc-db hmm_meta.txt file. — read_hmm_meta","text":"file Path sys_meta.txt","code":""},{"path":"https://leightonpayne.github.io/padlocdev/reference/read_hmm_meta.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read a padloc-db hmm_meta.txt file. — read_hmm_meta","text":"tibble::tibble().","code":""},{"path":"https://leightonpayne.github.io/padlocdev/reference/read_hmm_meta.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Read a padloc-db hmm_meta.txt file. — read_hmm_meta","text":"","code":"sys_meta <- read_sys_meta(padlocdev_example(\"padloc-db/sys_meta.txt\"))"},{"path":"https://leightonpayne.github.io/padlocdev/reference/read_padloc_model.html","id":null,"dir":"Reference","previous_headings":"","what":"Read in a padloc model (*.yaml) file — read_padloc_model","title":"Read in a padloc model (*.yaml) file — read_padloc_model","text":"Read padloc model (*.yaml) file.","code":""},{"path":"https://leightonpayne.github.io/padlocdev/reference/read_padloc_model.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read in a padloc model (*.yaml) file — read_padloc_model","text":"","code":"read_padloc_model(file)"},{"path":"https://leightonpayne.github.io/padlocdev/reference/read_padloc_model.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read in a padloc model (*.yaml) file — read_padloc_model","text":"file Path padloc model yaml format (*.yaml).","code":""},{"path":"https://leightonpayne.github.io/padlocdev/reference/read_padloc_model.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read in a padloc model (*.yaml) file — read_padloc_model","text":"base::list().","code":""},{"path":"https://leightonpayne.github.io/padlocdev/reference/read_padloc_model.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Read in a padloc model (*.yaml) file — read_padloc_model","text":"","code":"padloc_model <- read_padloc_model(padlocdev_example(\"padloc-db/sys/DRT_class_I.yaml\"))"},{"path":"https://leightonpayne.github.io/padlocdev/reference/read_sys_groups.html","id":null,"dir":"Reference","previous_headings":"","what":"Read a padloc-db sys_groups.txt file. — read_sys_groups","title":"Read a padloc-db sys_groups.txt file. — read_sys_groups","text":"Read padloc-db sys_groups.txt file.","code":""},{"path":"https://leightonpayne.github.io/padlocdev/reference/read_sys_groups.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read a padloc-db sys_groups.txt file. — read_sys_groups","text":"","code":"read_sys_groups(file)"},{"path":"https://leightonpayne.github.io/padlocdev/reference/read_sys_groups.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read a padloc-db sys_groups.txt file. — read_sys_groups","text":"file Path sys_groups.txt","code":""},{"path":"https://leightonpayne.github.io/padlocdev/reference/read_sys_groups.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read a padloc-db sys_groups.txt file. — read_sys_groups","text":"tibble::tibble().","code":""},{"path":"https://leightonpayne.github.io/padlocdev/reference/read_sys_groups.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Read a padloc-db sys_groups.txt file. — read_sys_groups","text":"","code":"sys_groups <- read_sys_groups(padlocdev_example(\"padloc-db/sys_groups.txt\")) sys_groups #> # A tibble: 19 × 2 #>    yaml.name        group   #>    <chr>            <chr>   #>  1 brex_other       group_1 #>  2 brex_type_I      group_1 #>  3 brex_type_II     group_1 #>  4 brex_type_III    group_2 #>  5 brex_type_IV     group_2 #>  6 brex_type_V      group_2 #>  7 brex_type_VI     group_2 #>  8 DRT_class_I      group_4 #>  9 DRT_class_II     group_4 #> 10 DRT_class_III    group_4 #> 11 DRT_other        group_4 #> 12 DRT_type_I       group_4 #> 13 DRT_type_II      group_4 #> 14 DRT_type_III     group_4 #> 15 DRT_type_IV      group_4 #> 16 DRT_type_V       group_4 #> 17 hachiman_other   group_5 #> 18 hachiman_type_I  group_5 #> 19 hachiman_type_II group_5"},{"path":"https://leightonpayne.github.io/padlocdev/reference/read_sys_meta.html","id":null,"dir":"Reference","previous_headings":"","what":"Read a padloc-db sys_meta.txt file. — read_sys_meta","title":"Read a padloc-db sys_meta.txt file. — read_sys_meta","text":"Read padloc-db sys_meta.txt file.","code":""},{"path":"https://leightonpayne.github.io/padlocdev/reference/read_sys_meta.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read a padloc-db sys_meta.txt file. — read_sys_meta","text":"","code":"read_sys_meta(file)"},{"path":"https://leightonpayne.github.io/padlocdev/reference/read_sys_meta.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read a padloc-db sys_meta.txt file. — read_sys_meta","text":"file Path sys_meta.txt.","code":""},{"path":"https://leightonpayne.github.io/padlocdev/reference/read_sys_meta.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read a padloc-db sys_meta.txt file. — read_sys_meta","text":"tibble::tibble().","code":""},{"path":"https://leightonpayne.github.io/padlocdev/reference/read_sys_meta.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Read a padloc-db sys_meta.txt file. — read_sys_meta","text":"","code":"sys_meta <- read_sys_meta(padlocdev_example(\"padloc-db/sys_meta.txt\")) sys_meta #> # A tibble: 19 × 5 #>    system   type      yaml.name        search notes #>    <chr>    <chr>     <chr>            <lgl>  <chr> #>  1 BREX     other     brex_other       TRUE   NA    #>  2 BREX     type I    brex_type_I      TRUE   NA    #>  3 BREX     type II   brex_type_II     TRUE   NA    #>  4 BREX     type III  brex_type_III    TRUE   NA    #>  5 BREX     type IV   brex_type_IV     TRUE   NA    #>  6 BREX     type V    brex_type_V      TRUE   NA    #>  7 BREX     type VI   brex_type_VI     TRUE   NA    #>  8 DRT      class I   DRT_class_I      TRUE   NA    #>  9 DRT      class II  DRT_class_II     TRUE   NA    #> 10 DRT      class III DRT_class_III    TRUE   NA    #> 11 DRT      other     DRT_other        TRUE   NA    #> 12 DRT      type I    DRT_type_I       TRUE   NA    #> 13 DRT      type II   DRT_type_II      TRUE   NA    #> 14 DRT      type III  DRT_type_III     TRUE   NA    #> 15 DRT      type IV   DRT_type_IV      TRUE   NA    #> 16 DRT      type V    DRT_type_V       TRUE   NA    #> 17 Hachiman other     hachiman_other   TRUE   NA    #> 18 Hachiman type I    hachiman_type_I  TRUE   NA    #> 19 Hachiman type II   hachiman_type_II TRUE   NA"},{"path":"https://leightonpayne.github.io/padlocdev/reference/report_padloc_model_validity.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate a validity report for a list of padloc models — report_padloc_model_validity","title":"Generate a validity report for a list of padloc models — report_padloc_model_validity","text":"Generate validity report list padloc models.","code":""},{"path":"https://leightonpayne.github.io/padlocdev/reference/report_padloc_model_validity.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate a validity report for a list of padloc models — report_padloc_model_validity","text":"","code":"report_padloc_model_validity(models)"},{"path":"https://leightonpayne.github.io/padlocdev/reference/report_padloc_model_validity.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate a validity report for a list of padloc models — report_padloc_model_validity","text":"models base::list() system models (.e. read multi_read_padloc_model().","code":""},{"path":"https://leightonpayne.github.io/padlocdev/reference/report_padloc_model_validity.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate a validity report for a list of padloc models — report_padloc_model_validity","text":"purrr::safely() style base::list() components result error. model valid, result TRUE error NULL. model invalid, result FALSE error error object describes reason model invalid.","code":""},{"path":"https://leightonpayne.github.io/padlocdev/reference/system_cp_files.html","id":null,"dir":"Reference","previous_headings":"","what":"Copy a list of files on the system — system_cp_files","title":"Copy a list of files on the system — system_cp_files","text":"Copy list files system.","code":""},{"path":"https://leightonpayne.github.io/padlocdev/reference/system_cp_files.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Copy a list of files on the system — system_cp_files","text":"","code":"system_cp_files(file_list, extension, path, new_path)"},{"path":"https://leightonpayne.github.io/padlocdev/reference/system_cp_files.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Copy a list of files on the system — system_cp_files","text":"file_list character vector file names (without extensions). extension extension apply file names. path path origin directory containing files copy. new_path path destination directory. exist, directory created (recursively).","code":""},{"path":"https://leightonpayne.github.io/padlocdev/reference/system_cp_files.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Copy a list of files on the system — system_cp_files","text":"Nothing.","code":""},{"path":"https://leightonpayne.github.io/padlocdev/reference/system_cp_hmm.html","id":null,"dir":"Reference","previous_headings":"","what":"Copy profile HMM files from one directory to another — system_cp_hmm","title":"Copy profile HMM files from one directory to another — system_cp_hmm","text":"Copy profile HMM files one directory another.","code":""},{"path":"https://leightonpayne.github.io/padlocdev/reference/system_cp_hmm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Copy profile HMM files from one directory to another — system_cp_hmm","text":"","code":"system_cp_hmm(hmm_list, path, new_path)"},{"path":"https://leightonpayne.github.io/padlocdev/reference/system_cp_hmm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Copy profile HMM files from one directory to another — system_cp_hmm","text":"hmm_list character vector listing HMM file names copied, generated ... path path new_path asd...","code":""},{"path":"https://leightonpayne.github.io/padlocdev/reference/system_cp_hmm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Copy profile HMM files from one directory to another — system_cp_hmm","text":"Nothing.","code":""},{"path":"https://leightonpayne.github.io/padlocdev/reference/system_cp_sys.html","id":null,"dir":"Reference","previous_headings":"","what":"Copy system description files from one directory to another — system_cp_sys","title":"Copy system description files from one directory to another — system_cp_sys","text":"Copy system description files one directory another.","code":""},{"path":"https://leightonpayne.github.io/padlocdev/reference/system_cp_sys.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Copy system description files from one directory to another — system_cp_sys","text":"","code":"system_cp_sys(sys_list, path, new_path)"},{"path":"https://leightonpayne.github.io/padlocdev/reference/system_cp_sys.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Copy system description files from one directory to another — system_cp_sys","text":"sys_list character vector listing system description file names copied, generated ... path path new_path asd...","code":""},{"path":"https://leightonpayne.github.io/padlocdev/reference/system_cp_sys.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Copy system description files from one directory to another — system_cp_sys","text":"Nothing.","code":""},{"path":"https://leightonpayne.github.io/padlocdev/reference/system_mv_deprecated.html","id":null,"dir":"Reference","previous_headings":"","what":"Move system description files to deprecated directory — system_mv_deprecated","title":"Move system description files to deprecated directory — system_mv_deprecated","text":"Move system description files deprecated directory","code":""},{"path":"https://leightonpayne.github.io/padlocdev/reference/system_mv_deprecated.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Move system description files to deprecated directory — system_mv_deprecated","text":"","code":"system_mv_deprecated(path)"},{"path":"https://leightonpayne.github.io/padlocdev/reference/system_mv_deprecated.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Move system description files to deprecated directory — system_mv_deprecated","text":"path path padloc-db/sys/","code":""},{"path":"https://leightonpayne.github.io/padlocdev/reference/system_mv_deprecated.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Move system description files to deprecated directory — system_mv_deprecated","text":"Nothing.","code":""},{"path":"https://leightonpayne.github.io/padlocdev/reference/valid_padloc_model.html","id":null,"dir":"Reference","previous_headings":"","what":"Validity checker for a padloc model — valid_padloc_model","title":"Validity checker for a padloc model — valid_padloc_model","text":"Validity checker padloc model.","code":""},{"path":"https://leightonpayne.github.io/padlocdev/reference/valid_padloc_model.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Validity checker for a padloc model — valid_padloc_model","text":"","code":"valid_padloc_model(padloc_model)"},{"path":"https://leightonpayne.github.io/padlocdev/reference/valid_padloc_model.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Validity checker for a padloc model — valid_padloc_model","text":"padloc_model padloc model.","code":""},{"path":"https://leightonpayne.github.io/padlocdev/reference/valid_padloc_model.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Validity checker for a padloc model — valid_padloc_model","text":"TRUE model valid, else error object.","code":""},{"path":"https://leightonpayne.github.io/padlocdev/reference/which_uses.html","id":null,"dir":"Reference","previous_headings":"","what":"Find out which system models use particular proteins — which_uses","title":"Find out which system models use particular proteins — which_uses","text":"Find system models use particular proteins.","code":""},{"path":"https://leightonpayne.github.io/padlocdev/reference/which_uses.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find out which system models use particular proteins — which_uses","text":"","code":"which_uses(genes, models_expanded)"},{"path":"https://leightonpayne.github.io/padlocdev/reference/which_uses.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find out which system models use particular proteins — which_uses","text":"genes Character aray gene names. models_expanded List expanded models.","code":""},{"path":"https://leightonpayne.github.io/padlocdev/reference/which_uses.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find out which system models use particular proteins — which_uses","text":"list system models.","code":""},{"path":"https://leightonpayne.github.io/padlocdev/reference/why_invalid.html","id":null,"dir":"Reference","previous_headings":"","what":"Determine why padloc models are invalid — why_invalid","title":"Determine why padloc models are invalid — why_invalid","text":"Determine padloc models invalid.","code":""},{"path":"https://leightonpayne.github.io/padlocdev/reference/why_invalid.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Determine why padloc models are invalid — why_invalid","text":"","code":"why_invalid(validity_report)"},{"path":"https://leightonpayne.github.io/padlocdev/reference/why_invalid.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Determine why padloc models are invalid — why_invalid","text":"validity_report validity report generated report_padloc_model_validity().","code":""},{"path":"https://leightonpayne.github.io/padlocdev/reference/why_invalid.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Determine why padloc models are invalid — why_invalid","text":"named list invalid models associated error.","code":""}]
